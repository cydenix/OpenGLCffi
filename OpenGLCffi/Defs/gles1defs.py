
DEF = '''
typedef int32_t                khronos_int32_t;
typedef uint32_t               khronos_uint32_t;
typedef int64_t                khronos_int64_t;
typedef uint64_t               khronos_uint64_t;
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
typedef          float         khronos_float_t;
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
typedef khronos_int32_t GLclampx;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef khronos_int32_t GLfixed;
typedef khronos_int64_t GLint64;
typedef khronos_uint64_t GLuint64;
typedef khronos_intptr_t GLintptr;
typedef khronos_ssize_t GLsizeiptr;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef short GLshort;
typedef int GLint;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalf;
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef unsigned int GLhandleARB;

void  glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glFogfv(GLenum pname, const GLfloat *params);
void  glVertex2xOES(GLfixed x);
GLboolean  glIsBuffer(GLuint buffer);
void  glMultMatrixx(const GLfixed *m);
void  glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
void  glGetClipPlanef(GLenum plane, GLfloat *equation);
void  glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glFogx(GLenum pname, GLfixed param);
void  glVertexPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glFogf(GLenum pname, GLfloat param);
GLboolean  glIsEnabled(GLenum cap);
void  glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void  glDrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
void  glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glDepthRangex(GLfixed n, GLfixed f);
void  glGetPointerv(GLenum pname, void **params);
void  glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLboolean  glUnmapBufferOES(GLenum target);
GLbitfield  glQueryMatrixxOES(GLfixed *mantissa, GLint *exponent);
void  glClipPlanexOES(GLenum plane, const GLfixed *equation);
void  glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glDeleteFramebuffersOES(GLsizei n, const GLuint *framebuffers);
void  glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void  glMultiTexCoord2bvOES(GLenum texture, const GLbyte *coords);
void  glEvalCoord2xvOES(const GLfixed *coords);
void  glLightxv(GLenum light, GLenum pname, const GLfixed *params);
void  glGetBooleanv(GLenum pname, GLboolean *data);
void  glTexCoord2xOES(GLfixed s, GLfixed t);
void  glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void  glTexParameteri(GLenum target, GLenum pname, GLint param);
void  glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
const GLubyte * glGetString(GLenum name);
void  glExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders);
void  glLightxvOES(GLenum light, GLenum pname, const GLfixed *params);
void  glPointParameterxOES(GLenum pname, GLfixed param);
void  glPrioritizeTexturesxOES(GLsizei n, const GLuint *textures, const GLfixed *priorities);
void  glDeleteTextures(GLsizei n, const GLuint *textures);
void  glDrawTexivOES(const GLint *coords);
void  glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
void  glScalexOES(GLfixed x, GLfixed y, GLfixed z);
void  glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params);
void  glCullFace(GLenum mode);
void  glTexCoord1xOES(GLfixed s);
void  glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glRasterPos2xOES(GLfixed x, GLfixed y);
void  glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glLightModelfv(GLenum pname, const GLfloat *params);
void  glRotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void  glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void  glGetTexEnvxv(GLenum target, GLenum pname, GLfixed *params);
void  glAlphaFunc(GLenum func, GLfloat ref);
void  glStencilFunc(GLenum func, GLint ref, GLuint mask);
void  glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
void  glDrawTexsvOES(const GLshort *coords);
void  glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void  glDrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
void  glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
void  glGenerateMipmapOES(GLenum target);
void  glRasterPos3xvOES(const GLfixed *coords);
void  glMaterialxvOES(GLenum face, GLenum pname, const GLfixed *param);
void  glDeleteBuffers(GLsizei n, const GLuint *buffers);
void  glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void  glGetFixedv(GLenum pname, GLfixed *params);
void  glMaterialfv(GLenum face, GLenum pname, const GLfloat *params);
void  glAlphaFuncxOES(GLenum func, GLfixed ref);
void  glPointParameterfv(GLenum pname, const GLfloat *params);
void  glFramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glDrawTexxvOES(const GLfixed *coords);
void  glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);
GLboolean  glIsVertexArrayOES(GLuint array);
GLenum  glGetError();
void  glGetTexEnviv(GLenum target, GLenum pname, GLint *params);
void  glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);
void  glWeightPointerOES(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);
void  glLightxOES(GLenum light, GLenum pname, GLfixed param);
void  glPixelStorei(GLenum pname, GLint param);
void  glDepthMask(GLboolean flag);
void  glBlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha);
void  glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
void  glRasterPos2xvOES(const GLfixed *coords);
void  glRenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void  glPassThroughxOES(GLfixed token);
void  glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
void  glVertex3xOES(GLfixed x, GLfixed y);
void  glFinishFenceNV(GLuint fence);
void  glDepthRangexOES(GLfixed n, GLfixed f);
void  glPixelMapx(GLenum map, GLint size, const GLfixed *values);
void  glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLboolean  glExtIsProgramBinaryQCOM(GLuint program);
void  glPointSize(GLfloat size);
void  glFramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void  glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
void  glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed *params);
void  glDrawArrays(GLenum mode, GLint first, GLsizei count);
void  glClear(GLbitfield mask);
void  glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
void  glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed *params);
void  glTranslatef(GLfloat x, GLfloat y, GLfloat z);
void  glTranslatex(GLfixed x, GLfixed y, GLfixed z);
void  glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glMaterialf(GLenum face, GLenum pname, GLfloat param);
void  glMaterialx(GLenum face, GLenum pname, GLfixed param);
void  glDeleteVertexArraysOES(GLsizei n, const GLuint *arrays);
void  glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);
void  glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
void  glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
void  glGetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint *params);
void  glLightx(GLenum light, GLenum pname, GLfixed param);
void  glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glLightf(GLenum light, GLenum pname, GLfloat param);
void  glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
void  glSampleCoverage(GLfloat value, GLboolean invert);
void  glClearDepthxOES(GLfixed depth);
void  glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void  glMultiTexCoord4bvOES(GLenum texture, const GLbyte *coords);
void  glTexGenivOES(GLenum coord, GLenum pname, const GLint *params);
void  glBlendEquationEXT(GLenum mode);
void  glTexEnvf(GLenum target, GLenum pname, GLfloat param);
void  glMultiTexCoord1xvOES(GLenum texture, const GLfixed *coords);
void  glTexEnvi(GLenum target, GLenum pname, GLint param);
void  glTexEnvx(GLenum target, GLenum pname, GLfixed param);
void  glLightModelf(GLenum pname, GLfloat param);
GLboolean  glIsRenderbufferOES(GLuint renderbuffer);
void  glExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);
void  glLightModelx(GLenum pname, GLfixed param);
GLenum  glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glDrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
void  glColor4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLsync  glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
void  glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void  glPointParameterxv(GLenum pname, const GLfixed *params);
void  glPixelStorex(GLenum pname, GLfixed param);
void  glTexCoord1bOES(GLbyte s);
void  glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
void  glBindTexture(GLenum target, GLuint texture);
void  glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params);
void  glCurrentPaletteMatrixOES(GLuint matrixpaletteindex);
void  glDrawTexfvOES(const GLfloat *coords);
void  glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers);
void  glGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls);
void  glBindBuffer(GLenum target, GLuint buffer);
void  glConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glSampleCoveragex(GLclampx value, GLboolean invert);
void  glPointParameterf(GLenum pname, GLfloat param);
void  glGetTexGenfvOES(GLenum coord, GLenum pname, GLfloat *params);
void  glTexCoord3bvOES(const GLbyte *coords);
void  glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
void  glShadeModel(GLenum mode);
void  glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glGenBuffers(GLsizei n, GLuint *buffers);
void  glMultiTexCoord3xvOES(GLenum texture, const GLfixed *coords);
void  glColor3xvOES(const GLfixed *components);
void  glGetLightxvOES(GLenum light, GLenum pname, GLfixed *params);
void  glRectxvOES(const GLfixed *v1, const GLfixed *v2);
void  glGetLightxv(GLenum light, GLenum pname, GLfixed *params);
void  glGetInteger64vAPPLE(GLenum pname, GLint64 *params);
void  glClearColorx(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glBindFramebufferOES(GLenum target, GLuint framebuffer);
void  glFogxv(GLenum pname, const GLfixed *param);
void  glMultMatrixxOES(const GLfixed *m);
void  glTexCoord1xvOES(const GLfixed *coords);
void  glFogxvOES(GLenum pname, const GLfixed *param);
void  glDepthFunc(GLenum func);
void  glPointParameterx(GLenum pname, GLfixed param);
void  glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glEnableClientState(GLenum array);
void  glClipPlanexIMG(GLenum p, const GLfixed *eqn);
void  glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
void  glIndexxvOES(const GLfixed *component);
void  glPointSizexOES(GLfixed size);
void  glAlphaFuncx(GLenum func, GLfixed ref);
void  glGetFloatv(GLenum pname, GLfloat *data);
void  glGetIntegerv(GLenum pname, GLint *data);
void  glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
void  glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void  glTexCoord1bvOES(const GLbyte *coords);
void  glMultMatrixf(const GLfloat *m);
void  glVertex3xvOES(const GLfixed *coords);
void  glTexGenfOES(GLenum coord, GLenum pname, GLfloat param);
void  glLineWidth(GLfloat width);
void  glDepthRangef(GLfloat n, GLfloat f);
void  glFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed *buffer);
void  glGetBufferPointervOES(GLenum target, GLenum pname, void **params);
void  glLineWidthx(GLfixed width);
void  glGetTexGenivOES(GLenum coord, GLenum pname, GLint *params);
void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
void  glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
void  glNormalPointer(GLenum type, GLsizei stride, const void *pointer);
void  glBindRenderbufferOES(GLenum target, GLuint renderbuffer);
void  glLightfv(GLenum light, GLenum pname, const GLfloat *params);
void  glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
void  glFrustumx(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glFrustumf(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glNormal3xvOES(const GLfixed *coords);
void * glMapBufferOES(GLenum target, GLenum access);
void  glTexCoord4xvOES(const GLfixed *coords);
void  glFlush();
void  glVertex4xvOES(const GLfixed *coords);
void  glClearStencil(GLint s);
void  glLightModelxv(GLenum pname, const GLfixed *param);
GLboolean  glIsTexture(GLuint texture);
void  glPolygonOffset(GLfloat factor, GLfloat units);
void  glLineWidthxOES(GLfixed width);
void  glGetLightxOES(GLenum light, GLenum pname, GLfixed *params);
void  glMatrixMode(GLenum mode);
void  glLoadMatrixxOES(const GLfixed *m);
void  glGetClipPlanexOES(GLenum plane, GLfixed *equation);
void  glLoadPaletteFromModelViewMatrixOES();
void  glTexCoord3xvOES(const GLfixed *coords);
void  glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
void  glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glVertex4bvOES(const GLbyte *coords);
void  glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void  glGenFencesNV(GLsizei n, GLuint *fences);
void  glFinish();
void  glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
void  glMultiTexCoord2xvOES(GLenum texture, const GLfixed *coords);
void  glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params);
void  glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glIndexxOES(GLfixed component);
void  glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glLogicOp(GLenum opcode);
void  glMultiTexCoord1xOES(GLenum texture, GLfixed s);
void  glBindVertexArrayOES(GLuint array);
void  glRasterPos4xvOES(const GLfixed *coords);
void  glAccumxOES(GLenum op, GLfixed value);
void  glPointParameterxvOES(GLenum pname, const GLfixed *params);
void  glDrawElements(GLenum mode, GLsizei count, GLenum type, const void *indices);
void  glClientActiveTexture(GLenum texture);
void  glMatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glDrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
void  glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
void  glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void  glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
GLboolean  glTestFenceNV(GLuint fence);
void  glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
void  glDisableClientState(GLenum array);
void  glGetClipPlanex(GLenum plane, GLfixed *equation);
GLboolean  glIsSyncAPPLE(GLsync sync);
void  glExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures);
void  glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void  glPixelTransferxOES(GLenum pname, GLfixed param);
void  glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
void  glExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms);
void  glClearDepthx(GLfixed depth);
void  glClearDepthf(GLfloat d);
GLboolean  glIsFenceNV(GLuint fence);
void  glExtGetBufferPointervQCOM(GLenum target, void **params);
void  glMultiTexCoord4x(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void  glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void  glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void  glMultTransposeMatrixxOES(const GLfixed *m);
void  glGetPixelMapxv(GLenum map, GLint size, GLfixed *values);
void  glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length);
void  glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glMaterialxv(GLenum face, GLenum pname, const GLfixed *param);
void  glPolygonOffsetx(GLfixed factor, GLfixed units);
void  glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
void  glDisableDriverControlQCOM(GLuint driverControl);
void  glLoadMatrixx(const GLfixed *m);
void  glLoadMatrixf(const GLfloat *m);
void  glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
void  glMultiTexCoord1bOES(GLenum texture, GLbyte s);
void  glTexParameterxv(GLenum target, GLenum pname, const GLfixed *params);
void  glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glTexParameterx(GLenum target, GLenum pname, GLfixed param);
void  glDeleteRenderbuffersOES(GLsizei n, const GLuint *renderbuffers);
void  glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params);
GLboolean  glIsFramebufferOES(GLuint framebuffer);
void  glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void  glPointSizex(GLfixed size);
void  glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glDepthRangefOES(GLclampf n, GLclampf f);
void  glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
void  glBlendEquationOES(GLenum mode);
void  glGenVertexArraysOES(GLsizei n, GLuint *arrays);
void  glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void  glGetClipPlanefOES(GLenum plane, GLfloat *equation);
void  glLoadIdentity();
void  glTexCoord2bvOES(const GLbyte *coords);
void  glEvalCoord2xOES(GLfixed u, GLfixed v);
void  glTexGeniOES(GLenum coord, GLenum pname, GLint param);
void  glGetMaterialxv(GLenum face, GLenum pname, GLfixed *params);
void  glClipPlanefIMG(GLenum p, const GLfloat *eqn);
void  glSampleCoveragexOES(GLclampx value, GLboolean invert);
void  glGetMapxvOES(GLenum target, GLenum query, GLfixed *v);
void  glTexEnvxv(GLenum target, GLenum pname, const GLfixed *params);
void  glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params);
void  glEvalCoord1xvOES(const GLfixed *coords);
void  glOrthox(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glOrthof(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glEnable(GLenum cap);
void  glEnableDriverControlQCOM(GLuint driverControl);
void  glPushMatrix();
void  glMultiTexCoord4xvOES(GLenum texture, const GLfixed *coords);
void  glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
void  glVertex3bvOES(const GLbyte *coords);
void  glGetTexParameterxv(GLenum target, GLenum pname, GLfixed *params);
void  glMultiTexCoord1bvOES(GLenum texture, const GLbyte *coords);
void  glFogxOES(GLenum pname, GLfixed param);
void  glClearDepthfOES(GLclampf depth);
void  glGenTextures(GLsizei n, GLuint *textures);
void  glLightModelxvOES(GLenum pname, const GLfixed *param);
void  glGetFixedvOES(GLenum pname, GLfixed *params);
void  glDeleteFencesNV(GLsizei n, const GLuint *fences);
void  glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
void  glGetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void  glTexCoord2xvOES(const GLfixed *coords);
void  glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void  glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
void  glColor4xvOES(const GLfixed *components);
void  glGetFenceivNV(GLuint fence, GLenum pname, GLint *params);
GLenum  glCheckFramebufferStatusOES(GLenum target);
void  glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void  glSetFenceNV(GLuint fence, GLenum condition);
void  glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glVertex2bvOES(const GLbyte *coords);
void  glHint(GLenum target, GLenum mode);
void  glScalef(GLfloat x, GLfloat y, GLfloat z);
void  glScalex(GLfixed x, GLfixed y, GLfixed z);
void  glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
void  glVertex2xvOES(const GLfixed *coords);
void  glDisable(GLenum cap);
void  glGenFramebuffersOES(GLsizei n, GLuint *framebuffers);
void  glGetLightfv(GLenum light, GLenum pname, GLfloat *params);
void  glVertex2bOES(GLbyte x, GLbyte y);
GLenum  glGetGraphicsResetStatusEXT();
void  glClipPlanefOES(GLenum plane, const GLfloat *equation);
void  glPolygonOffsetxOES(GLfixed factor, GLfixed units);
void  glTexCoord4bvOES(const GLbyte *coords);
void  glLightModelxOES(GLenum pname, GLfixed param);
void  glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
void  glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void  glPopMatrix();
void  glEndTilingQCOM(GLbitfield preserveMask);
void  glActiveTexture(GLenum texture);
void  glTexGenfvOES(GLenum coord, GLenum pname, const GLfloat *params);
void  glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params);
void  glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
void  glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
void  glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glResolveMultisampleFramebufferAPPLE();
void  glLoadTransposeMatrixxOES(const GLfixed *m);
void  glTexEnviv(GLenum target, GLenum pname, const GLint *params);
void  glDeleteSyncAPPLE(GLsync sync);
void  glBlendFunc(GLenum sfactor, GLenum dfactor);
void  glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
void  glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glStencilMask(GLuint mask);
void  glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void  glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void  glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void  glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glPointSizePointerOES(GLenum type, GLsizei stride, const void *pointer);
void  glBlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glMultiTexCoord3bvOES(GLenum texture, const GLbyte *coords);
void  glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void  glGenRenderbuffersOES(GLsizei n, GLuint *renderbuffers);
void  glBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
void  glColorPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glTexCoord2bOES(GLbyte s, GLbyte t);
void  glNormal3x(GLfixed nx, GLfixed ny, GLfixed nz);
void  glClipPlanex(GLenum plane, const GLfixed *equation);
void  glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
void  glClipPlanef(GLenum p, const GLfloat *eqn);
void  glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
void  glFrontFace(GLenum mode);
void  glEvalCoord1xOES(GLfixed u);
'''
