
DEF = '''
typedef int32_t                khronos_int32_t;
typedef uint32_t               khronos_uint32_t;
typedef int64_t                khronos_int64_t;
typedef uint64_t               khronos_uint64_t;
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
typedef          float         khronos_float_t;
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
typedef khronos_int8_t GLbyte;
typedef khronos_uint8_t GLubyte;
typedef khronos_float_t GLfloat;
typedef khronos_float_t GLclampf;
typedef khronos_int32_t GLfixed;
typedef khronos_int64_t GLint64;
typedef khronos_uint64_t GLuint64;
typedef khronos_int64_t GLint64EXT;
typedef khronos_uint64_t GLuint64EXT;
typedef khronos_intptr_t GLintptr;
typedef khronos_ssize_t GLsizeiptr;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef short GLshort;
typedef int GLint;
typedef int GLclampx;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalf;
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef unsigned int GLhandleARB;

void  glStencilMaskSeparate(GLenum face, GLuint mask);
void  glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void  glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params);
void  glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glEndPerfMonitorAMD(GLuint monitor);
void  glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
void  glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLboolean  glIsBuffer(GLuint buffer);
void  glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val);
void  glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glCoverStrokePathNV(GLuint path, GLenum coverMode);
void  glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void  glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
void  glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void  glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label);
void  glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale);
void  glResumeTransformFeedback();
void  glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void  glInsertEventMarkerEXT(GLsizei length, const GLchar *marker);
void  glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void  glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat *v);
void  glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLenum  glGetGraphicsResetStatus();
void  glVertexAttrib1fv(GLuint index, const GLfloat *v);
GLboolean  glIsEnabled(GLenum cap);
void  glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void  glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glGenFramebuffers(GLsizei n, GLuint *framebuffers);
void  glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
void  glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
void  glDeleteVertexArrays(GLsizei n, const GLuint *arrays);
void  glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat *value);
void  glGetPointerv(GLenum pname, void **params);
void  glGetUniformfv(GLuint program, GLint location, GLfloat *params);
void  glGetUniformuiv(GLuint program, GLint location, GLuint *params);
void  glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
void  glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void  glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
GLsync  glFenceSync(GLenum condition, GLbitfield flags);
GLboolean  glUnmapBufferOES(GLenum target);
void  glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params);
void  glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glValidateProgramPipeline(GLuint pipeline);
void  glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
void  glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
void  glGenSamplers(GLsizei count, GLuint *samplers);
void  glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
void  glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params);
GLboolean  glIsSync(GLsync sync);
void  glGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glPathParameterivNV(GLuint path, GLenum pname, const GLint *value);
void  glUniform4uiv(GLint location, GLsizei count, const GLuint *value);
void  glGetIntegeri_vEXT(GLenum target, GLuint index, GLint *data);
void  glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
void  glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void  glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void  glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint *params);
void  glDeleteSync(GLsync sync);
GLboolean  glIsImageHandleResidentNV(GLuint64 handle);
void  glUniform3iv(GLint location, GLsizei count, const GLint *value);
void  glUseProgram(GLuint program);
void  glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name);
void  glGetBooleanv(GLenum pname, GLboolean *data);
void  glDeleteShader(GLuint shader);
void  glEnableiOES(GLenum target, GLuint index);
void  glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void  glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void  glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
void  glTexParameteri(GLenum target, GLenum pname, GLint param);
void  glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
void  glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
void  glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId);
void  glGetPathCoordsNV(GLuint path, GLfloat *coords);
void  glGenProgramPipelines(GLsizei n, GLuint *pipelines);
void  glVertexAttrib3fv(GLuint index, const GLfloat *v);
void  glLinkProgram(GLuint program);
void  glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
const GLubyte * glGetString(GLenum name);
void  glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value);
void  glExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders);
void  glEndQuery(GLenum target);
GLboolean  glIsQueryEXT(GLuint id);
void  glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
void  glDeleteTextures(GLsizei n, const GLuint *textures);
void  glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void  glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat *v);
void  glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void  glUniform1i(GLint location, GLint v0);
void  glCullFace(GLenum mode);
void  glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLboolean  glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
void  glAttachShader(GLuint program, GLuint shader);
void  glDisableiEXT(GLenum target, GLuint index);
void  glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params);
void  glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint *params);
void  glDeletePathsNV(GLuint path, GLsizei range);
void  glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
void  glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLboolean  glIsTransformFeedback(GLuint id);
void  glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value);
GLboolean  glIsProgramPipeline(GLuint pipeline);
void  glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size);
void  glStencilFunc(GLenum func, GLint ref, GLuint mask);
void  glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params);
void  glDispatchComputeIndirect(GLintptr indirect);
void  glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glUniformHandleui64NV(GLint location, GLuint64 value);
void  glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void  glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
void  glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void  glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void  glBeginPerfQueryINTEL(GLuint queryHandle);
void  glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glDeleteBuffers(GLsizei n, const GLuint *buffers);
void  glBindProgramPipeline(GLuint pipeline);
void  glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void  glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint *params);
void  glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void  glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
const GLubyte * glGetStringi(GLenum name, GLuint index);
void  glGetTexParameterIivOES(GLenum target, GLenum pname, GLint *params);
void  glUniform2fv(GLint location, GLsizei count, const GLfloat *value);
void  glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
void  glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params);
void  glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLenum  glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels);
void  glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLenum  glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void  glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void  glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void  glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
GLboolean  glIsSampler(GLuint sampler);
GLboolean  glIsVertexArrayOES(GLuint array);
GLenum  glCheckFramebufferStatus(GLenum target);
void  glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void  glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
void  glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
void  glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void *binary, GLint length);
void  glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
void  glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void  glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
void  glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBeginQuery(GLenum target, GLuint id);
void  glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
void  glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLenum  glGetError();
void  glDeletePerfQueryINTEL(GLuint queryHandle);
void  glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params);
void  glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);
void  glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
void  glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);
void  glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void  glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
void  glPixelStorei(GLenum pname, GLint param);
void  glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glDepthMask(GLboolean flag);
void  glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
void  glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void  glUniform1ui64NV(GLint location, GLuint64EXT x);
void  glProgramParameteri(GLuint program, GLenum pname, GLint value);
void  glVertexAttribDivisorNV(GLuint index, GLuint divisor);
void  glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
void  glPatchParameteriOES(GLenum pname, GLint value);
void  glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void *userParam);
void  glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
void  glFinishFenceNV(GLuint fence);
void  glMemoryBarrierByRegion(GLbitfield barriers);
void  glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
GLuint  glCreateShader(GLenum type);
GLuint  glGenPathsNV(GLsizei range);
void  glGenRenderbuffers(GLsizei n, GLuint *renderbuffers);
void  glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void  glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLboolean  glExtIsProgramBinaryQCOM(GLuint program);
void  glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews);
void  glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void  glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glActiveProgramEXT(GLuint program);
void  glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glValidateProgramPipelineEXT(GLuint pipeline);
void  glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
void  glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void  glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers);
void  glDrawArrays(GLenum mode, GLint first, GLsizei count);
void  glClear(GLbitfield mask);
void  glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params);
void  glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
void  glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *param);
void  glMultiDrawElementsBaseVertexOES(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);
void  glDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect);
void  glDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors);
void  glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void  glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
void  glScissorArrayvOES(GLuint first, GLsizei count, const GLint *v);
GLboolean  glIsVertexArray(GLuint array);
void  glDisableVertexAttribArray(GLuint index);
void  glBeginQueryEXT(GLenum target, GLuint id);
void  glDeleteVertexArraysOES(GLsizei n, const GLuint *arrays);
void  glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);
void  glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
void  glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void  glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params);
void  glDeleteQueriesEXT(GLsizei n, const GLuint *ids);
void  glPatchParameteri(GLenum pname, GLint value);
void  glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLenum  glGetGraphicsResetStatusKHR();
void  glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint *params);
void  glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
void  glSampleCoverage(GLfloat value, GLboolean invert);
void  glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void  glUniform2i(GLint location, GLint v0, GLint v1);
void  glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
void  glPrimitiveBoundingBox(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
GLenum  glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glBlendEquationEXT(GLenum mode);
void  glGenPerfMonitorsAMD(GLsizei n, GLuint *monitors);
void  glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data);
void  glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLboolean  glIsEnabledi(GLenum target, GLuint index);
void  glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void  glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint *param);
void  glCopyPathNV(GLuint resultPath, GLuint srcPath);
void  glObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label);
GLuint  glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void  glMakeTextureHandleNonResidentNV(GLuint64 handle);
void  glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glTexParameterIivOES(GLenum target, GLenum pname, const GLint *params);
void  glExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);
void  glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
void  glGetPointervKHR(GLenum pname, void **params);
void  glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);
GLenum  glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void  glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void  glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glPopDebugGroupKHR();
void  glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data);
void  glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void  glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void  glBindVertexArray(GLuint array);
void  glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glBindFramebuffer(GLenum target, GLuint framebuffer);
void  glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLsync  glFenceSyncAPPLE(GLenum condition, GLbitfield flags);
void  glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLboolean  glIsRenderbuffer(GLuint renderbuffer);
void  glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst);
void  glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLboolean  glIsProgramPipelineEXT(GLuint pipeline);
void  glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
void  glValidateProgram(GLuint program);
void  glActiveShaderProgram(GLuint pipeline, GLuint program);
void  glPathCoverDepthFuncNV(GLenum func);
void  glConservativeRasterParameteriNV(GLenum pname, GLint param);
void  glBindTexture(GLenum target, GLuint texture);
void  glDetachShader(GLuint program, GLuint shader);
void  glGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value);
GLint  glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name);
void  glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void  glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers);
void  glGetUniformiv(GLuint program, GLint location, GLint *params);
void  glGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls);
void  glBindBuffer(GLenum target, GLuint buffer);
void  glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines);
void  glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value);
void  glQueryCounterEXT(GLuint id, GLenum target);
void  glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLuint  glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const*strings);
void  glGenerateMipmap(GLenum target);
void  glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
void  glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint *param);
void  glBlendEquationiOES(GLuint buf, GLenum mode);
GLboolean  glUnmapBuffer(GLenum target);
void  glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glReleaseShaderCompiler();
void  glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
void  glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat *v);
GLboolean  glIsEnablediNV(GLenum target, GLuint index);
void  glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint *params);
void  glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
void  glReadBuffer(GLenum src);
void  glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void  glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glGenBuffers(GLsizei n, GLuint *buffers);
void  glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void  glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLboolean  glIsFramebuffer(GLuint framebuffer);
void  glPolygonModeNV(GLenum face, GLenum mode);
void  glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void  glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
void  glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
void  glFragmentCoverageColorNV(GLuint color);
void  glGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void  glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params);
void  glGetInteger64vAPPLE(GLenum pname, GLint64 *params);
void  glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
GLuint  glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void  glGetFloati_vNV(GLenum target, GLuint index, GLfloat *data);
void  glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void  glDepthFunc(GLenum func);
void  glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void  glBlendFunci(GLuint buf, GLenum src, GLenum dst);
GLuint  glCreateShaderProgramEXT(GLenum type, const GLchar *string);
void  glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLint  glGetUniformLocation(GLuint program, const GLchar *name);
void  glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glUniform4fv(GLint location, GLsizei count, const GLfloat *value);
void  glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
void  glEndPerfQueryINTEL(GLuint queryHandle);
void  glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
void  glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label);
void  glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
void  glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLuint64  glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void  glBlendParameteriNV(GLenum pname, GLint value);
void  glMinSampleShadingOES(GLfloat value);
void  glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
void  glGetFloatv(GLenum pname, GLfloat *data);
void  glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glGetIntegerv(GLenum pname, GLint *data);
GLfloat  glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
void  glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLboolean  glIsQuery(GLuint id);
void  glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
GLboolean  glIsEnablediEXT(GLenum target, GLuint index);
void  glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params);
void  glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void  glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
GLenum  glPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
void  glCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle);
void  glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params);
void  glMinSampleShading(GLfloat value);
void  glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void  glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f);
void  glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value);
void  glBindSampler(GLuint unit, GLuint sampler);
void  glLineWidth(GLfloat width);
void  glGetIntegeri_v(GLenum target, GLuint index, GLint *data);
void  glDisableiOES(GLenum target, GLuint index);
void  glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
GLuint64  glGetTextureHandleNV(GLuint texture);
void  glDepthRangef(GLfloat n, GLfloat f);
void  glEnablei(GLenum target, GLuint index);
void  glReadBufferIndexedEXT(GLenum src, GLint index);
void  glGetBufferPointervOES(GLenum target, GLenum pname, void **params);
void  glSampleMaski(GLuint maskNumber, GLbitfield mask);
void  glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void  glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
void * glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void  glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
void  glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f);
void  glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
void  glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void  glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
void  glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glGetQueryiv(GLenum target, GLenum pname, GLint *params);
void  glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void  glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void  glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void  glCoverageModulationTableNV(GLsizei n, const GLfloat *v);
void  glViewportIndexedfvNV(GLuint index, const GLfloat *v);
void * glMapBufferOES(GLenum target, GLenum access);
void  glGetFirstPerfQueryIdINTEL(GLuint *queryId);
void  glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
GLuint64  glGetTextureHandleIMG(GLuint texture);
void  glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
void  glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value);
void  glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
void  glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glFlush();
void  glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glDrawTransformFeedbackEXT(GLenum mode, GLuint id);
void  glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params);
void  glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
void  glGetQueryivEXT(GLenum target, GLenum pname, GLint *params);
void  glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void  glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void  glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glClearStencil(GLint s);
void  glMakeTextureHandleResidentNV(GLuint64 handle);
void  glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void  glBlendEquationiEXT(GLuint buf, GLenum mode);
GLboolean  glIsTexture(GLuint texture);
void  glPolygonOffset(GLfloat factor, GLfloat units);
void  glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glGetProgramiv(GLuint program, GLenum pname, GLint *params);
void  glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glBlendBarrier();
void  glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
void  glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGenQueries(GLsizei n, GLuint *ids);
void  glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glDeleteSamplers(GLsizei count, const GLuint *samplers);
void  glGetPathCommandsNV(GLuint path, GLubyte *commands);
void  glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void  glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
void  glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint *params);
void  glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m);
void  glUniform3fv(GLint location, GLsizei count, const GLfloat *value);
void  glMakeImageHandleNonResidentNV(GLuint64 handle);
void  glDrawBuffers(GLsizei n, const GLenum *bufs);
void  glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box);
void  glBindTransformFeedback(GLenum target, GLuint id);
void  glViewportIndexedfvOES(GLuint index, const GLfloat *v);
void  glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
void  glGenFencesNV(GLsizei n, GLuint *fences);
void  glUniform2uiv(GLint location, GLsizei count, const GLuint *value);
void  glFinish();
void  glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
void  glUniform1uiv(GLint location, GLsizei count, const GLuint *value);
void  glScissorArrayvNV(GLuint first, GLsizei count, const GLint *v);
void  glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
void  glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale);
void  glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glDrawBuffersNV(GLsizei n, const GLenum *bufs);
void  glBlendBarrierNV();
void  glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint *value);
void  glVertexAttribDivisorANGLE(GLuint index, GLuint divisor);
void  glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void  glDeleteQueries(GLsizei n, const GLuint *ids);
void  glScissorIndexedvOES(GLuint index, const GLint *v);
void  glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void  glPopGroupMarkerEXT();
void  glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
void  glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params);
void  glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void  glBufferStorageEXT(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
void  glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void  glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void  glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBindVertexArrayOES(GLuint array);
void  glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
void  glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
void  glDrawElements(GLenum mode, GLsizei count, GLenum type, const void *indices);
void  glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void  glUniform1iv(GLint location, GLsizei count, const GLint *value);
void  glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
void  glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
void  glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void  glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
GLboolean  glIsProgram(GLuint program);
void  glVertexAttrib4fv(GLuint index, const GLfloat *v);
void  glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLboolean  glTestFenceNV(GLuint fence);
void  glVertexAttrib2fv(GLuint index, const GLfloat *v);
void  glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void  glBeginConditionalRenderNV(GLuint id, GLenum mode);
void  glPathFogGenNV(GLenum genMode);
void  glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
GLboolean  glIsSyncAPPLE(GLsync sync);
void  glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLint  glGetFragDataIndexEXT(GLuint program, const GLchar *name);
void  glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
GLuint64  glGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler);
void  glExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures);
void  glEndConditionalRenderNV();
void  glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
void  glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLboolean  glIsTextureHandleResidentNV(GLuint64 handle);
void  glGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId);
void  glGetInteger64v(GLenum pname, GLint64 *data);
void  glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value);
void  glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
void  glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m);
void  glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params);
void  glExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms);
void  glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void  glClearDepthf(GLfloat d);
GLboolean  glIsFenceNV(GLuint fence);
void  glBeginPerfMonitorAMD(GLuint monitor);
void  glExtGetBufferPointervQCOM(GLenum target, void **params);
void  glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint *params);
void  glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glGetPathDashArrayNV(GLuint path, GLfloat *dashArray);
void  glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void  glBlendEquation(GLenum mode);
void  glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params);
void  glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
void  glBeginTransformFeedback(GLenum primitiveMode);
void  glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void  glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids);
void  glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glBindAttribLocation(GLuint program, GLuint index, const GLchar *name);
void  glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glPushGroupMarkerEXT(GLsizei length, const GLchar *marker);
void  glResolveDepthValuesNV();
void  glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glUniform2ui(GLint location, GLuint v0, GLuint v1);
void  glApplyFramebufferAttachmentCMAAINTEL();
void  glDisablei(GLenum target, GLuint index);
void  glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void  glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length);
void  glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
void  glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
void  glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
void  glDisableDriverControlQCOM(GLuint driverControl);
void  glPauseTransformFeedback();
void  glVertexAttribI4iv(GLuint index, const GLint *v);
void  glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount);
void  glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
void  glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void  glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
void  glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
void  glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void  glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint *values);
void  glPathParameteriNV(GLuint path, GLenum pname, GLint value);
void  glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines);
void  glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint *param);
void  glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer);
void  glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glCompileShader(GLuint shader);
void  glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
void  glGenVertexArraysOES(GLsizei n, GLuint *arrays);
void  glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void  glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void  glVertexAttrib1f(GLuint index, GLfloat x);
void  glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glDeleteProgram(GLuint program);
void  glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void  glEnableiNV(GLenum target, GLuint index);
void  glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void  glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void  glDrawArraysIndirect(GLenum mode, const void *indirect);
void  glGenVertexArrays(GLsizei n, GLuint *arrays);
void  glUniformHandleui64IMG(GLint location, GLuint64 value);
void  glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
void  glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params);
void  glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat *v);
void  glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void  glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params);
void  glBlendBarrierKHR();
void  glUniform1ui(GLint location, GLuint v0);
void  glMemoryBarrier(GLbitfield barriers);
GLint  glGetFragDataLocation(GLuint program, const GLchar *name);
void  glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void  glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint *param);
GLboolean  glIsShader(GLuint shader);
void  glVertexAttribDivisorEXT(GLuint index, GLuint divisor);
void  glEnable(GLenum cap);
void  glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
void  glBlendEquationi(GLuint buf, GLenum mode);
GLint  glGetAttribLocation(GLuint program, const GLchar *name);
void  glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
void  glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat *v);
void  glGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines);
void  glEnableDriverControlQCOM(GLuint driverControl);
void  glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
void  glProgramUniform1i(GLuint program, GLint location, GLint v0);
void  glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
void  glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
void  glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
void  glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void  glEndQueryEXT(GLenum target);
void  glGetPathParameterivNV(GLuint path, GLenum pname, GLint *value);
void  glUniform4iv(GLint location, GLsizei count, const GLint *value);
void  glGenTextures(GLsizei n, GLuint *textures);
void  glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params);
void  glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void  glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
void  glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
void  glGenQueriesEXT(GLsizei n, GLuint *ids);
void  glUniform1f(GLint location, GLfloat v0);
void  glUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 *value);
void  glDeleteFencesNV(GLsizei n, const GLuint *fences);
void  glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void  glUniform2iv(GLint location, GLsizei count, const GLint *value);
void  glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
void  glGetShaderiv(GLuint shader, GLenum pname, GLint *params);
void  glAlphaFuncQCOM(GLenum func, GLclampf ref);
void  glGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
void  glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
void  glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glGetFloati_vOES(GLenum target, GLuint index, GLfloat *data);
void  glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, const GLint *basevertex);
void  glCoverageModulationNV(GLenum components);
void  glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void  glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params);
void  glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void  glGetFenceivNV(GLuint fence, GLenum pname, GLint *params);
void  glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBlendFunciOES(GLuint buf, GLenum src, GLenum dst);
void  glCoverFillPathNV(GLuint path, GLenum coverMode);
void  glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void  glSetFenceNV(GLuint fence, GLenum condition);
void  glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params);
GLboolean  glIsPathNV(GLuint path);
void  glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
void  glDebugMessageCallback(GLDEBUGPROC callback, const void *userParam);
void  glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
GLuint  glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings);
void  glGetBooleani_v(GLenum target, GLuint index, GLboolean *data);
void  glCoverageOperationNV(GLenum operation);
void  glHint(GLenum target, GLenum mode);
void  glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
void  glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glDrawBuffersIndexedEXT(GLint n, const GLenum *location, const GLint *indices);
void  glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void  glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
void  glGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer);
void  glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void  glScissorIndexedvNV(GLuint index, const GLint *v);
void  glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
void  glDisable(GLenum cap);
void  glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
GLboolean  glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
void  glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
void  glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint *params);
GLuint64  glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLenum  glGetGraphicsResetStatusEXT();
GLboolean  glIsEnablediOES(GLenum target, GLuint index);
void  glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
void  glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glUniform3uiv(GLint location, GLsizei count, const GLuint *value);
void  glMultiDrawArraysIndirectEXT(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
void  glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
GLsizei  glGetFramebufferPixelLocalStorageSizeEXT(GLuint target);
void  glEnableiEXT(GLenum target, GLuint index);
void  glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *param);
void  glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void  glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void  glEndTilingQCOM(GLbitfield preserveMask);
void  glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glActiveTexture(GLenum texture);
void  glEnableVertexAttribArray(GLuint index);
void  glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
void  glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
void  glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glPopDebugGroup();
void  glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void  glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
void  glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glResolveMultisampleFramebufferAPPLE();
void  glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
void  glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glDeleteSyncAPPLE(GLsync sync);
void  glBlendFunc(GLenum sfactor, GLenum dfactor);
GLuint  glCreateProgram();
void  glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glCoverageMaskNV(GLboolean mask);
void  glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param);
void  glUniform1i64NV(GLint location, GLint64EXT x);
void  glPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString);
void  glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
void  glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glUseShaderProgramEXT(GLenum type, GLuint program);
void  glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void  glStencilMask(GLuint mask);
void  glVertexAttribI4uiv(GLuint index, const GLuint *v);
GLuint  glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name);
void  glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
void  glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
void  glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGenTransformFeedbacks(GLsizei n, GLuint *ids);
void  glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params);
void  glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params);
void  glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void  glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void  glProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
void  glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void  glGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glPatchParameteriEXT(GLenum pname, GLint value);
void  glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glTexParameterIiv(GLenum target, GLenum pname, const GLint *params);
void  glEndTransformFeedback();
void  glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void  glVertexAttribDivisor(GLuint index, GLuint divisor);
GLint  glGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar *name);
void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void  glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
void  glShaderSource(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
void  glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers);
void  glDisableiNV(GLenum target, GLuint index);
void  glReadBufferNV(GLenum mode);
void  glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
void  glBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
void  glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat *value);
void  glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glGetBufferPointerv(GLenum target, GLenum pname, void **params);
void  glDrawBuffersEXT(GLsizei n, const GLenum *bufs);
void  glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
void  glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param);
void  glUniform1fv(GLint location, GLsizei count, const GLfloat *value);
void  glBindProgramPipelineEXT(GLuint pipeline);
void  glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void  glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
void  glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message);
GLuint  glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName);
void  glFrontFace(GLenum mode);
GLboolean  glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
'''
