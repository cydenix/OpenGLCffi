
DEF = '''
typedef int32_t                khronos_int32_t;
typedef uint32_t               khronos_uint32_t;
typedef int64_t                khronos_int64_t;
typedef uint64_t               khronos_uint64_t;
typedef signed   char          khronos_int8_t;
typedef unsigned char          khronos_uint8_t;
typedef signed   short int     khronos_int16_t;
typedef unsigned short int     khronos_uint16_t;
typedef signed   long  int     khronos_intptr_t;
typedef unsigned long  int     khronos_uintptr_t;
typedef signed   long  int     khronos_ssize_t;
typedef unsigned long  int     khronos_usize_t;
typedef          float         khronos_float_t;
typedef khronos_uint64_t       khronos_utime_nanoseconds_t;
typedef khronos_int64_t        khronos_stime_nanoseconds_t;
typedef unsigned int GLenum;
typedef unsigned char GLboolean;
typedef unsigned int GLbitfield;
typedef void GLvoid;
typedef signed char GLbyte;
typedef short GLshort;
typedef int GLint;
typedef int GLclampx;
typedef unsigned char GLubyte;
typedef unsigned short GLushort;
typedef unsigned int GLuint;
typedef int GLsizei;
typedef float GLfloat;
typedef float GLclampf;
typedef double GLdouble;
typedef double GLclampd;
typedef void *GLeglImageOES;
typedef char GLchar;
typedef char GLcharARB;
typedef unsigned short GLhalfARB;
typedef unsigned short GLhalf;
typedef GLint GLfixed;
typedef ptrdiff_t GLintptr;
typedef ptrdiff_t GLsizeiptr;
typedef int64_t GLint64;
typedef uint64_t GLuint64;
typedef ptrdiff_t GLintptrARB;
typedef ptrdiff_t GLsizeiptrARB;
typedef int64_t GLint64EXT;
typedef uint64_t GLuint64EXT;
typedef struct __GLsync *GLsync;
struct _cl_context;
struct _cl_event;
typedef void (GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCKHR)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);
typedef void (GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,void *userParam);
typedef unsigned short GLhalfNV;
typedef GLintptr GLvdpauSurfaceNV;
typedef unsigned int GLhandleARB;

void  glMultiDrawArraysIndirectBindlessCountNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
void  glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void  glGetListParameterivSGIX(GLuint list, GLenum pname, GLint *params);
void  glProgramUniform1i64ARB(GLuint program, GLint location, GLint64 x);
void  glVertexArrayElementBuffer(GLuint vaobj, GLuint buffer);
void  glHintPGI(GLenum target, GLint mode);
void  glStencilMaskSeparate(GLenum face, GLuint mask);
void  glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void  glTextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void  glGetIntegerIndexedvEXT(GLenum target, GLuint index, GLint *data);
void  glTextureParameterfv(GLuint texture, GLenum pname, const GLfloat *param);
void  glVertexAttrib4usv(GLuint index, const GLushort *v);
void  glTexRenderbufferNV(GLenum target, GLuint renderbuffer);
void  glFrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glProgramUniform4ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void  glInstrumentsBufferSGIX(GLsizei size, GLint *buffer);
void  glIndexi(GLint c);
void  glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
void  glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void  glEvalCoord2d(GLdouble u, GLdouble v);
void  glEvalCoord2f(GLfloat u, GLfloat v);
void  glIndexd(GLdouble c);
void  glSecondaryColor3hvNV(const GLhalfNV *v);
void  glIndexf(GLfloat c);
void  glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glProgramUniform3ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void  glIndexs(GLshort c);
void  glVertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void  glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
void  glVertex3sv(const GLshort *v);
void  glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void  glGetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void  glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void  glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params);
void  glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glSecondaryColor3fv(const GLfloat *v);
void  glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);
void  glEndPerfMonitorAMD(GLuint monitor);
void  glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
void  glFogfv(GLenum pname, const GLfloat *params);
void  glVertex2xOES(GLfixed x);
void  glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);
void  glMultTransposeMatrixdARB(const GLdouble *m);
void  glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params);
void  glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glDeformSGIX(GLbitfield mask);
void  glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
void  glEndFragmentShaderATI();
GLboolean  glIsBuffer(GLuint buffer);
void  glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val);
void  glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
GLvdpauSurfaceNV  glVDPAURegisterOutputSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void  glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glVertexAttribDivisorARB(GLuint index, GLuint divisor);
void  glCoverStrokePathNV(GLuint path, GLenum coverMode);
void  glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void  glVertex3bOES(GLbyte x, GLbyte y, GLbyte z);
void  glTessellationFactorAMD(GLfloat factor);
void  glDebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLboolean  glIsObjectBufferATI(GLuint buffer);
void  glPopAttrib();
void  glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void  glColorMaterial(GLenum face, GLenum mode);
void  glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void  glMinSampleShadingARB(GLfloat value);
void  glColor3b(GLbyte red, GLbyte green, GLbyte blue);
void  glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glColor3f(GLfloat red, GLfloat green, GLfloat blue);
void  glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void  glColor3d(GLdouble red, GLdouble green, GLdouble blue);
void  glGetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void  glColor3i(GLint red, GLint green, GLint blue);
void  glVertexWeightfEXT(GLfloat weight);
GLint  glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name);
void  glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);
void  glVertexAttrib4ubv(GLuint index, const GLubyte *v);
void  glColor3s(GLshort red, GLshort green, GLshort blue);
void  glVertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
void  glGetColorTableSGI(GLenum target, GLenum format, GLenum type, void *table);
void  glMultiTexCoord3hvNV(GLenum target, const GLhalfNV *v);
void  glMatrixPushEXT(GLenum mode);
void  glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void  glGetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
void  glMultiTexCoord1iv(GLenum target, const GLint *v);
void  glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
void  glProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label);
void  glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat *params);
void  glVertex2iv(const GLint *v);
void  glGetTexEnvxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble *params);
void  glVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT *v);
void  glVertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glInvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
void  glResumeTransformFeedback();
void  glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void  glInsertEventMarkerEXT(GLsizei length, const GLchar *marker);
void  glTessellationModeAMD(GLenum mode);
GLint  glFinishAsyncSGIX(GLuint *markerp);
void  glFogi(GLenum pname, GLint param);
void  glVertexPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glBeginVertexShaderEXT();
void  glFogf(GLenum pname, GLfloat param);
void  glMultiTexCoord1d(GLenum target, GLdouble s);
void  glMultiTexCoord1f(GLenum target, GLfloat s);
void  glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void  glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glVertexAttribI2i(GLuint index, GLint x, GLint y);
void  glMultiTexCoord1i(GLenum target, GLint s);
void  glUniform1ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
void  glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte *program);
void  glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLenum  glGetGraphicsResetStatus();
void  glVertexAttrib1fv(GLuint index, const GLfloat *v);
GLboolean  glIsEnabled(GLenum cap);
void  glStencilOp(GLenum fail, GLenum zfail, GLenum zpass);
void  glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
void  glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat *params);
void  glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
void * glMapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glWeightfvARB(GLint size, const GLfloat *weights);
void  glFragmentLightModelfSGIX(GLenum pname, GLfloat param);
void  glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void  glVertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glReplacementCodeubvSUN(const GLubyte *code);
void  glGenFramebuffers(GLsizei n, GLuint *framebuffers);
void  glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble *data);
void  glDrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
void  glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);
void  glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat *params);
void  glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
GLuint  glGetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);
void  glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
void  glDeleteVertexArrays(GLsizei n, const GLuint *arrays);
void  glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void  glOrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glViewportArrayv(GLuint first, GLsizei count, const GLfloat *v);
void  glDrawElementArrayATI(GLenum mode, GLsizei count);
void  glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat *value);
void  glWindowPos3iMESA(GLint x, GLint y, GLint z);
void  glMultiTexCoord2s(GLenum target, GLshort s, GLshort t);
void  glVertex3dv(const GLdouble *v);
void  glVertexAttribI3uivEXT(GLuint index, const GLuint *v);
void  glVertexStream2fvATI(GLenum stream, const GLfloat *coords);
void  glUniform3ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z);
void  glColor4fv(const GLfloat *v);
void  glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
void  glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
void  glGenVertexArraysAPPLE(GLsizei n, GLuint *arrays);
void  glVertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void  glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
void  glTexCoord2sv(const GLshort *v);
GLboolean  glIsProgramNV(GLuint id);
void  glUniform2dv(GLint location, GLsizei count, const GLdouble *value);
void  glGetPixelMapuiv(GLenum map, GLuint *values);
void  glDepthBoundsEXT(GLclampd zmin, GLclampd zmax);
void  glVertexAttrib4hvNV(GLuint index, const GLhalfNV *v);
void  glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void  glGetPointerv(GLenum pname, void **params);
void  glGetProgramStringNV(GLuint id, GLenum pname, GLubyte *program);
void  glGetUniformfv(GLuint program, GLint location, GLfloat *params);
void  glGetUniformuiv(GLuint program, GLint location, GLuint *params);
void  glWindowPos3ivMESA(const GLint *v);
void  glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m);
void  glClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);
void  glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);
void  glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
void  glVariantfvEXT(GLuint id, const GLfloat *addr);
void  glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);
void  glMatrixLoadfEXT(GLenum mode, const GLfloat *m);
void  glLoadIdentityDeformationMapSGIX(GLbitfield mask);
void  glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glNamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void  glReadInstrumentsSGIX(GLint marker);
void  glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);
void  glFogCoordPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
GLsync  glFenceSync(GLenum condition, GLbitfield flags);
void  glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params);
void  glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum *bufs);
void  glVertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat *v);
void  glPauseTransformFeedbackNV();
void  glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params);
void  glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glValidateProgramPipeline(GLuint pipeline);
void  glVertexAttrib3hvNV(GLuint index, const GLhalfNV *v);
void  glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);
void  glTexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void  glWindowPos3dvARB(const GLdouble *v);
void  glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);
void  glColor3hvNV(const GLhalfNV *v);
void  glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
void  glVertexP4ui(GLenum type, GLuint value);
void  glGenSamplers(GLsizei count, GLuint *samplers);
void  glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glVertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat *v);
void  glVertexAttrib2sv(GLuint index, const GLshort *v);
void  glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
void  glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode);
void  glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays);
void  glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT *params);
GLbitfield  glQueryMatrixxOES(GLfixed *mantissa, GLint *exponent);
void  glTexCoord4iv(const GLint *v);
void  glDrawTransformFeedback(GLenum mode, GLuint id);
void  glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLvdpauSurfaceNV  glVDPAURegisterVideoSurfaceNV(const void *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);
void  glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params);
void  glClipPlanexOES(GLenum plane, const GLfixed *equation);
void  glIndexPointer(GLenum type, GLsizei stride, const void *pointer);
void  glFragmentLightModeliSGIX(GLenum pname, GLint param);
void  glListParameteriSGIX(GLuint list, GLenum pname, GLint param);
void  glBlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
GLboolean  glIsSync(GLsync sync);
void  glVertex4iv(const GLint *v);
void  glMultiTexCoord3iv(GLenum target, const GLint *v);
void  glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glGetObjectPtrLabel(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glTextureParameteri(GLuint texture, GLenum pname, GLint param);
void  glMultiTexCoord1fARB(GLenum target, GLfloat s);
void  glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
void  glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void  glSecondaryColor3sv(const GLshort *v);
void  glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat *params);
void  glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint *names);
void  glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
void  glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void  glColor4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glFogCoordd(GLdouble coord);
void  glFogCoordf(GLfloat coord);
void  glDeleteBuffersARB(GLsizei n, const GLuint *buffers);
GLboolean  glUnmapBufferARB(GLenum target);
void  glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void  glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
void  glProgramUniform4ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void  glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void  glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
void  glPathParameterivNV(GLuint path, GLenum pname, const GLint *value);
void  glUniform4uiv(GLint location, GLsizei count, const GLuint *value);
void  glFrameZoomSGIX(GLint factor);
void  glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
void  glVertexAttribL1dv(GLuint index, const GLdouble *v);
void  glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glNormalStream3svATI(GLenum stream, const GLshort *coords);
void  glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
void  glSetInvariantEXT(GLuint id, GLenum type, const void *addr);
void  glGetTexBumpParameterivATI(GLenum pname, GLint *param);
GLboolean  glIsNamedStringARB(GLint namelen, const GLchar *name);
void  glEndOcclusionQueryNV();
void  glScissorArrayv(GLuint first, GLsizei count, const GLint *v);
void  glCallList(GLuint list);
void  glVertexArrayRangeAPPLE(GLsizei length, void *pointer);
void  glLightModeli(GLenum pname, GLint param);
void * glMapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint *stride, GLenum *layout);
void  glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat *params);
void  glVertexAttrib4ubvNV(GLuint index, const GLubyte *v);
void  glVertexAttrib4svARB(GLuint index, const GLshort *v);
void  glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers);
void  glTagSampleBufferSGIX();
void  glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glGetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
void  glWindowPos3iv(const GLint *v);
void  glVertexAttribL2dvEXT(GLuint index, const GLdouble *v);
void  glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params);
void  glInvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void * glMapBuffer(GLenum target, GLenum access);
void  glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
void  glVertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glElementPointerAPPLE(GLenum type, const void *pointer);
void  glVertexStream1fATI(GLenum stream, GLfloat x);
void  glFinishFenceAPPLE(GLuint fence);
void  glSecondaryColor3i(GLint red, GLint green, GLint blue);
void  glDeleteSync(GLsync sync);
void  glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void  glMaxShaderCompilerThreadsARB(GLuint count);
void  glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glSecondaryColor3s(GLshort red, GLshort green, GLshort blue);
GLboolean  glIsImageHandleResidentNV(GLuint64 handle);
void  glUniform3iv(GLint location, GLsizei count, const GLint *value);
void  glVertexAttribL3i64vNV(GLuint index, const GLint64EXT *v);
void  glTexCoord1s(GLshort s);
void  glPolygonMode(GLenum face, GLenum mode);
void  glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
void  glVertexAttrib1dvARB(GLuint index, const GLdouble *v);
void  glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
GLboolean  glIsVertexArrayAPPLE(GLuint array);
void  glUseProgram(GLuint program);
void  glLineStipple(GLint factor, GLushort pattern);
void  glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params);
void  glVertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glUniform3fvARB(GLint location, GLsizei count, const GLfloat *value);
void  glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glPixelStoref(GLenum pname, GLfloat param);
void  glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glMultiTexCoord2bvOES(GLenum texture, const GLbyte *coords);
void  glDeleteObjectARB(GLhandleARB obj);
void  glTextureLightEXT(GLenum pname);
void  glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void  glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void  glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
void  glEvalCoord2xvOES(const GLfixed *coords);
void  glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name);
void  glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLint  glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name);
void  glGetBooleanv(GLenum pname, GLboolean *data);
void  glDeleteShader(GLuint shader);
void  glVertexAttrib1fARB(GLuint index, GLfloat x);
void  glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void  glCopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void  glGetMapdv(GLenum target, GLenum query, GLdouble *v);
void  glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat *params);
void  glTextureParameterIuiv(GLuint texture, GLenum pname, const GLuint *params);
void  glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT *params);
void  glWindowPos3sARB(GLshort x, GLshort y, GLshort z);
void  glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glTexCoord3d(GLdouble s, GLdouble t, GLdouble r);
void  glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
void  glTexCoord2xOES(GLfixed s, GLfixed t);
void  glVertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void  glGetProgramivARB(GLenum target, GLenum pname, GLint *params);
void  glVertexAttribI4usv(GLuint index, const GLushort *v);
void  glTexParameterf(GLenum target, GLenum pname, GLfloat param);
void  glVertexAttribBinding(GLuint attribindex, GLuint bindingindex);
void  glGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params);
void  glTexParameteri(GLenum target, GLenum pname, GLint param);
void  glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);
void  glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void  glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
void  glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId);
void  glPopName();
void  glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
void  glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
void  glGetPathCoordsNV(GLuint path, GLfloat *coords);
void  glGenProgramPipelines(GLsizei n, GLuint *pipelines);
void  glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
void  glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
void  glVertexAttrib3fv(GLuint index, const GLfloat *v);
void  glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void  glGetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint *params);
void  glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
void  glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void  glLinkProgram(GLuint program);
void  glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glTexCoord2dv(const GLdouble *v);
void  glGetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glDebugMessageCallbackARB(GLDEBUGPROCARB callback, const void *userParam);
const GLubyte * glGetString(GLenum name);
void  glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value);
void  glLightxvOES(GLenum light, GLenum pname, const GLfixed *params);
void  glEndQuery(GLenum target);
void  glPointParameterxOES(GLenum pname, GLfixed param);
void  glPrioritizeTexturesxOES(GLsizei n, const GLuint *textures, const GLfixed *priorities);
void  glEdgeFlagPointer(GLsizei stride, const void *pointer);
void  glFramebufferParameteri(GLenum target, GLenum pname, GLint param);
void  glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
void  glMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount, GLint modestride);
void  glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
void  glVertexAttribI2ui(GLuint index, GLuint x, GLuint y);
void  glRasterPos3s(GLshort x, GLshort y, GLshort z);
void  glColorPointervINTEL(GLint size, GLenum type, const void **pointer);
void  glDeleteTextures(GLsizei n, const GLuint *textures);
void  glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
void  glClipControl(GLenum origin, GLenum depth);
void  glWindowPos3sMESA(GLshort x, GLshort y, GLshort z);
void  glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glNamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param);
void  glTexCoord2fVertex3fvSUN(const GLfloat *tc, const GLfloat *v);
void  glReplacementCodeusSUN(GLushort code);
void  glGetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint *param);
void  glVertexStream1fvATI(GLenum stream, const GLfloat *coords);
void  glCreateVertexArrays(GLsizei n, GLuint *arrays);
void  glBeginConditionalRender(GLuint id, GLenum mode);
void  glVertex4bOES(GLbyte x, GLbyte y, GLbyte z, GLbyte w);
void  glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void  glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params);
void  glScalexOES(GLfixed x, GLfixed y, GLfixed z);
void  glSamplerParameteri(GLuint sampler, GLenum pname, GLint param);
void  glGetVertexAttribivNV(GLuint index, GLenum pname, GLint *params);
void  glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
void  glBeginVideoCaptureNV(GLuint video_capture_slot);
void  glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
void  glUniform1d(GLint location, GLdouble x);
GLint  glRenderMode(GLenum mode);
void  glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
void  glGetCompressedTexImage(GLenum target, GLint level, void *img);
void  glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);
void  glUniform1i(GLint location, GLint v0);
void  glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params);
void  glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint *params);
void  glCullFace(GLenum mode);
void  glDeleteFencesAPPLE(GLsizei n, const GLuint *fences);
void  glProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
void  glUniformHandleui64ARB(GLint location, GLuint64 value);
void  glProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
void  glProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
void  glTexCoord1xOES(GLfixed s);
void  glMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);
GLboolean  glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);
void  glEndQueryARB(GLenum target);
void  glGetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glVertex3i(GLint x, GLint y, GLint z);
void  glVertexAttrib4uivARB(GLuint index, const GLuint *v);
void  glResumeTransformFeedbackNV();
void  glAttachShader(GLuint program, GLuint shader);
GLboolean  glIsList(GLuint list);
void  glTexCoord2fColor4ubVertex3fvSUN(const GLfloat *tc, const GLubyte *c, const GLfloat *v);
void  glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
void  glFogCoordPointer(GLenum type, GLsizei stride, const void *pointer);
GLboolean  glUnmapNamedBuffer(GLuint buffer);
void  glSampleMaskIndexedNV(GLuint index, GLbitfield mask);
void  glRasterPos2xOES(GLfixed x, GLfixed y);
void  glColor4ubVertex2fvSUN(const GLubyte *c, const GLfloat *v);
void  glSecondaryColor3dv(const GLdouble *v);
void  glVertexAttribI4sv(GLuint index, const GLshort *v);
void  glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
void  glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glSpriteParameterfSGIX(GLenum pname, GLfloat param);
void  glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
void  glTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params);
void  glFlushPixelDataRangeNV(GLenum target);
void  glWindowPos3fv(const GLfloat *v);
void  glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
void  glLightModelfv(GLenum pname, const GLfloat *params);
void  glVertexAttrib4NubvARB(GLuint index, const GLubyte *v);
void  glGetCompressedTexImageARB(GLenum target, GLint level, void *img);
void  glConvolutionParameteri(GLenum target, GLenum pname, GLint params);
void  glVertexWeighthNV(GLhalfNV weight);
void  glDeletePathsNV(GLuint path, GLsizei range);
void  glVertexAttribI4ubvEXT(GLuint index, const GLubyte *v);
void  glVertexAttrib1dNV(GLuint index, GLdouble x);
void  glVertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble *v);
void  glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glUnmapObjectBufferATI(GLuint buffer);
void  glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
void  glDeleteQueriesARB(GLsizei n, const GLuint *ids);
void  glWindowPos3svARB(const GLshort *v);
void  glTextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glStringMarkerGREMEDY(GLsizei len, const void *string);
GLboolean  glIsTransformFeedback(GLuint id);
void  glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value);
void  glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLboolean  glIsProgramPipeline(GLuint pipeline);
void  glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void  glVertex4i(GLint x, GLint y, GLint z, GLint w);
void  glGetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void  glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
void  glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
void  glReplacementCodeubSUN(GLubyte code);
void  glMultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void  glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);
void  glGetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat *params);
void  glVertexAttribL2dv(GLuint index, const GLdouble *v);
void  glVertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
void  glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glAlphaFunc(GLenum func, GLfloat ref);
void  glGetNamedStringARB(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);
void  glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void  glBufferPageCommitmentARB(GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);
void  glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
void  glStencilFunc(GLenum func, GLint ref, GLuint mask);
void  glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble *params);
void  glTexCoord3dv(const GLdouble *v);
void  glGetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void  glTexGenxOES(GLenum coord, GLenum pname, GLfixed param);
void  glLightEnviSGIX(GLenum pname, GLint param);
void  glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params);
void  glVertexStream2ivATI(GLenum stream, const GLint *coords);
void  glDispatchComputeIndirect(GLintptr indirect);
void  glGetColorTableEXT(GLenum target, GLenum format, GLenum type, void *data);
void  glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint *params);
void  glMultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void  glVertexAttribL1i64NV(GLuint index, GLint64EXT x);
void  glVDPAUInitNV(const void *vdpDevice, const void *getProcAddress);
void  glVertexAttrib1hvNV(GLuint index, const GLhalfNV *v);
void  glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glRasterPos2iv(const GLint *v);
void  glGetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT *result);
void  glUniformHandleui64NV(GLint location, GLuint64 value);
void  glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);
void  glVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT *v);
void  glSecondaryColor3uiv(const GLuint *v);
void  glRasterPos2i(GLint x, GLint y);
void  glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
void  glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
GLuint  glGetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar *name);
void  glSamplePatternSGIS(GLenum pattern);
void  glPushAttrib(GLbitfield mask);
void  glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
void  glRasterPos3xvOES(const GLfixed *coords);
void  glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
void  glVertexAttribL3dv(GLuint index, const GLdouble *v);
void  glLightiv(GLenum light, GLenum pname, const GLint *params);
void  glMaterialxvOES(GLenum face, GLenum pname, const GLfixed *param);
void  glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glVertexAttribL1dEXT(GLuint index, GLdouble x);
void  glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void  glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
void  glBeginPerfQueryINTEL(GLuint queryHandle);
void  glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint *params);
void  glDeleteBuffers(GLsizei n, const GLuint *buffers);
void  glBindProgramPipeline(GLuint pipeline);
void  glScissor(GLint x, GLint y, GLsizei width, GLsizei height);
void  glMaterialfv(GLenum face, GLenum pname, const GLfloat *params);
void  glWindowPos4fvMESA(const GLfloat *v);
void  glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat *params);
void  glAlphaFuncxOES(GLenum func, GLfixed ref);
void  glMultiDrawArraysIndirectAMD(GLenum mode, const void *indirect, GLsizei primcount, GLsizei stride);
void  glNormalStream3ivATI(GLenum stream, const GLint *coords);
void  glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void  glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void  glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glReplacementCodeusvSUN(const GLushort *code);
GLint  glPollInstrumentsSGIX(GLint *marker_p);
void  glGetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint *params);
const GLubyte * glGetStringi(GLenum name, GLuint index);
void  glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void *points);
void  glColor4dv(const GLdouble *v);
void  glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);
void  glMultiTexCoord1hNV(GLenum target, GLhalfNV s);
void  glPointParameterfv(GLenum pname, const GLfloat *params);
void  glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glUniform2fv(GLint location, GLsizei count, const GLfloat *value);
void  glFogCoordFormatNV(GLenum type, GLsizei stride);
void  glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);
void  glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void  glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void  glInvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);
void  glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
void  glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glNormal3iv(const GLint *v);
void  glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params);
void  glGetUniformdv(GLuint program, GLint location, GLdouble *params);
void  glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);
void  glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void  glCullParameterdvEXT(GLenum pname, GLdouble *params);
void  glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void  glGetTexParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glTangent3fvEXT(const GLfloat *v);
void  glTexCoord1iv(const GLint *v);
void  glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glColor3uiv(const GLuint *v);
void  glListBase(GLuint base);
void  glMultiTexCoord1iARB(GLenum target, GLint s);
void  glGetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void **param);
void  glGlobalAlphaFactorubSUN(GLubyte factor);
void  glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
void  glPointParameterfSGIS(GLenum pname, GLfloat param);
void  glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint *params);
void  glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
void  glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat *params);
GLenum  glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glQueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param);
void  glVertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat *v);
void  glVertexAttrib4NusvARB(GLuint index, const GLushort *v);
void  glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void *addr);
void  glTextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer);
void  glBlendFunciARB(GLuint buf, GLenum src, GLenum dst);
void  glVertexAttrib4Nsv(GLuint index, const GLshort *v);
void  glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params);
void  glReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
GLenum  glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glCopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
void  glGetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint *params);
void  glBindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void  glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat *params);
void  glDebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void  glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);
GLboolean  glIsVariantEnabledEXT(GLuint id, GLenum cap);
GLuint  glBindMaterialParameterEXT(GLenum face, GLenum value);
GLboolean  glIsSampler(GLuint sampler);
void  glConservativeRasterParameterfNV(GLenum pname, GLfloat value);
void  glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint *params);
void  glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void  glTexCoord1i(GLint s);
GLenum  glCheckFramebufferStatus(GLenum target);
void  glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
void  glTexCoord1d(GLdouble s);
void  glTexCoord1f(GLfloat s);
void  glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint *params);
void  glNamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
void  glBindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
void  glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);
void  glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);
void  glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glBindBufferBase(GLenum target, GLuint index, GLuint buffer);
void  glColor3bv(const GLbyte *v);
void  glSyncTextureINTEL(GLuint texture);
void  glCreateSamplers(GLsizei n, GLuint *samplers);
void  glCombinerParameterfNV(GLenum pname, GLfloat param);
void  glGetArrayObjectivATI(GLenum array, GLenum pname, GLint *params);
void  glVertexStream3fvATI(GLenum stream, const GLfloat *coords);
void  glMultiDrawArrays(GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);
void  glDeleteNamedStringARB(GLint namelen, const GLchar *name);
void  glProgramUniform2i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y);
void  glBinormal3ivEXT(const GLint *v);
void  glMultiDrawArraysIndirectCountARB(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void  glUniformBufferEXT(GLuint program, GLint location, GLuint buffer);
void  glWindowPos2ivMESA(const GLint *v);
void  glTexCoordP4ui(GLenum type, GLuint coords);
void  glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
void  glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
GLint  glGetInstrumentsSGIX();
void  glBufferDataARB(GLenum target, GLsizeiptrARB size, const void *data, GLenum usage);
void  glVertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glCreateFramebuffers(GLsizei n, GLuint *framebuffers);
void  glVertexAttribL2i64vNV(GLuint index, const GLint64EXT *v);
void  glNormalStream3dvATI(GLenum stream, const GLdouble *coords);
void  glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs);
void  glUniform2uivEXT(GLint location, GLsizei count, const GLuint *value);
void  glBeginQuery(GLenum target, GLuint id);
void  glTangent3svEXT(const GLshort *v);
void  glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
void  glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void  glMakeImageHandleResidentNV(GLuint64 handle, GLenum access);
void  glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
void  glDepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
void  glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params);
void  glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLenum  glGetError();
void  glGetTexEnviv(GLenum target, GLenum pname, GLint *params);
GLuint  glBindTextureUnitParameterEXT(GLenum unit, GLenum value);
void  glDrawCommandsStatesNV(GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
void  glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *n, const GLfloat *v);
void  glDeletePerfQueryINTEL(GLuint queryHandle);
void  glGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params);
void  glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
void  glDeleteOcclusionQueriesNV(GLsizei n, const GLuint *ids);
void  glVertexAttribI3ivEXT(GLuint index, const GLint *v);
void  glEvalCoord1d(GLdouble u);
void  glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params);
void  glEvalCoord1f(GLfloat u);
void  glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat *values);
void  glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLsync  glCreateSyncFromCLeventARB(struct _cl_context *context, struct _cl_event *event, GLbitfield flags);
void  glGetPixelMapusv(GLenum map, GLushort *values);
void  glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *table);
void  glAccum(GLenum op, GLfloat value);
void  glRasterPos3sv(const GLshort *v);
void  glUniform4i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void  glGetnUniformui64vARB(GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);
void  glVertexAttribI1uiEXT(GLuint index, GLuint x);
void  glLoadTransposeMatrixdARB(const GLdouble *m);
void  glProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
void  glProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glResetHistogramEXT(GLenum target);
void  glLightxOES(GLenum light, GLenum pname, GLfixed param);
void  glNamedBufferData(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
void  glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
void  glVertexAttrib3fvARB(GLuint index, const GLfloat *v);
void  glClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
void  glProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
void  glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
GLhandleARB  glCreateProgramObjectARB();
void  glMultiTexCoord1dvARB(GLenum target, const GLdouble *v);
void  glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params);
void  glRectsv(const GLshort *v1, const GLshort *v2);
void  glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void  glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
void  glMultiTexCoord1fvARB(GLenum target, const GLfloat *v);
void  glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint *rc, const GLubyte *c, const GLfloat *v);
void  glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void  glUniform1ui64ARB(GLint location, GLuint64 x);
void  glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);
void  glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
void  glGetTexGeniv(GLenum coord, GLenum pname, GLint *params);
void  glPixelStorei(GLenum pname, GLint param);
void  glGetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);
void  glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
void  glDepthMask(GLboolean flag);
void  glVertexStream1iATI(GLenum stream, GLint x);
void  glPatchParameterfv(GLenum pname, const GLfloat *values);
GLboolean  glIsFramebufferEXT(GLuint framebuffer);
void  glTextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glProgramUniform1ui64ARB(GLuint program, GLint location, GLuint64 x);
void  glWindowPos3iARB(GLint x, GLint y, GLint z);
void  glTexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
void  glGetPixelTexGenParameterivSGIS(GLenum pname, GLint *params);
void  glRasterPos4fv(const GLfloat *v);
void  glEvalCoord1dv(const GLdouble *u);
void  glPopClientAttrib();
void  glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
void  glVariantbvEXT(GLuint id, const GLbyte *addr);
void  glSampleMaskSGIS(GLclampf value, GLboolean invert);
void  glVertexAttrib4NivARB(GLuint index, const GLint *v);
void  glGlobalAlphaFactorfSUN(GLfloat factor);
void  glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLint  glPollAsyncSGIX(GLuint *markerp);
void  glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);
void  glDeleteProgramsNV(GLsizei n, const GLuint *programs);
void  glPixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
void  glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params);
void  glRasterPos2xvOES(const GLfixed *coords);
void  glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params);
void  glVertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void  glUniform1ui64NV(GLint location, GLuint64EXT x);
void  glProgramParameteri(GLuint program, GLenum pname, GLint value);
void  glPassThroughxOES(GLfixed token);
void  glNormal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
void  glGetMapfv(GLenum target, GLenum query, GLfloat *v);
void  glVertexStream2dvATI(GLenum stream, const GLdouble *coords);
void  glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLboolean  glIsStateNV(GLuint state);
void  glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void *userParam);
void  glGetIntegerui64vNV(GLenum value, GLuint64EXT *result);
void  glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat *params);
void  glRasterPos2fv(const GLfloat *v);
void  glVertex3xOES(GLfixed x, GLfixed y);
void  glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glWeightPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glFinishFenceNV(GLuint fence);
void  glMemoryBarrierByRegion(GLbitfield barriers);
void  glDepthRangexOES(GLfixed n, GLfixed f);
void  glEnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void  glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glPixelMapx(GLenum map, GLint size, const GLfixed *values);
void  glVertexAttrib3fvNV(GLuint index, const GLfloat *v);
void  glVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT *v);
void  glWindowPos2fMESA(GLfloat x, GLfloat y);
void  glVertex2sv(const GLshort *v);
void  glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void  glWindowPos2sv(const GLshort *v);
void  glBindFramebufferEXT(GLenum target, GLuint framebuffer);
void  glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLuint  glCreateShader(GLenum type);
GLuint  glGenPathsNV(GLsizei range);
void  glGenRenderbuffers(GLsizei n, GLuint *renderbuffers);
void  glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glVertexAttrib4ubvARB(GLuint index, const GLubyte *v);
void  glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glVertexAttribs1svNV(GLuint index, GLsizei count, const GLshort *v);
void  glClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
void  glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void  glPointParameterfARB(GLenum pname, GLfloat param);
void  glTexCoord2fv(const GLfloat *v);
void  glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
void  glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
void  glWindowPos2dMESA(GLdouble x, GLdouble y);
void  glTexCoord4fv(const GLfloat *v);
void  glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void  glVertexStream2svATI(GLenum stream, const GLshort *coords);
void  glPointSize(GLfloat size);
void  glBindTextureUnit(GLuint unit, GLuint texture);
void  glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);
void  glProgramUniform4i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void  glVertexAttrib4Nuiv(GLuint index, const GLuint *v);
void  glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params);
void  glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
void  glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void  glVertexAttrib2hvNV(GLuint index, const GLhalfNV *v);
void  glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params);
void  glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
void  glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glActiveProgramEXT(GLuint program);
void  glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glUniform3ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
void  glProgramUniform1ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void  glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
void  glValidateProgramPipelineEXT(GLuint pipeline);
void  glSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value);
void  glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glReplacementCodeuiSUN(GLuint code);
void  glStateCaptureNV(GLuint state, GLenum mode);
void  glWeightusvARB(GLint size, const GLushort *weights);
GLint  glGetFragDataIndex(GLuint program, const GLchar *name);
void  glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glMultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
void  glColor3sv(const GLshort *v);
void  glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void  glPolygonOffsetEXT(GLfloat factor, GLfloat bias);
void  glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);
void  glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params);
void  glPointParameterfEXT(GLenum pname, GLfloat param);
void  glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void  glVertex4sv(const GLshort *v);
void  glQueryCounter(GLuint id, GLenum target);
void  glMatrixMultfEXT(GLenum mode, const GLfloat *m);
void  glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);
void  glGetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed *params);
void  glVertexAttribL3dvEXT(GLuint index, const GLdouble *v);
void  glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);
void  glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);
void  glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void  glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers);
void  glDrawArrays(GLenum mode, GLint first, GLsizei count);
void  glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void  glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);
void  glClear(GLbitfield mask);
void  glUniform1i64ARB(GLint location, GLint64 x);
void  glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);
void  glCreateQueries(GLenum target, GLsizei n, GLuint *ids);
void  glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params);
void  glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void  glGetMaterialxvOES(GLenum face, GLenum pname, GLfixed *params);
void  glTranslatef(GLfloat x, GLfloat y, GLfloat z);
void  glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void  glTranslated(GLdouble x, GLdouble y, GLdouble z);
void  glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *param);
void  glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void  glDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect);
void  glDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors);
GLboolean  glIsRenderbufferEXT(GLuint renderbuffer);
void  glDrawCommandsNV(GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);
void  glUniform3ivARB(GLint location, GLsizei count, const GLint *value);
void  glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
void  glSecondaryColor3bv(const GLbyte *v);
void  glMatrixMultTransposedEXT(GLenum mode, const GLdouble *m);
void  glRequestResidentProgramsNV(GLsizei n, const GLuint *programs);
void  glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
void  glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 *params);
void  glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);
void  glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params);
void  glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);
void  glVertex3iv(const GLint *v);
void  glTexGenfv(GLenum coord, GLenum pname, const GLfloat *params);
void  glFrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
void  glBindVertexBuffers(GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);
void  glMateriali(GLenum face, GLenum pname, GLint param);
GLboolean  glIsVertexArray(GLuint array);
void  glDisableVertexAttribArray(GLuint index);
void  glWindowPos3ivARB(const GLint *v);
void  glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
void  glMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m);
void  glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
void  glShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
void  glMaterialf(GLenum face, GLenum pname, GLfloat param);
GLenum  glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
void  glVertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void  glVertex2hNV(GLhalfNV x, GLhalfNV y);
void  glDeleteVertexShaderEXT(GLuint id);
void  glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint *params);
void  glGlobalAlphaFactoriSUN(GLint factor);
void  glTextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
void  glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz);
void  glGetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint *params);
void  glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void  glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
void  glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
void  glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);
void * glMapNamedBuffer(GLuint buffer, GLenum access);
void  glVertexAttrib2fvNV(GLuint index, const GLfloat *v);
void  glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params);
void  glGetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble *params);
void  glEndConditionalRenderNVX();
void  glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
void  glNormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
void  glProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint *params);
void  glMapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
void  glBindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint *buffers);
void  glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
void  glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params);
void  glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void *pixels);
void  glVertexP4uiv(GLenum type, const GLuint *value);
void  glUniformui64NV(GLint location, GLuint64EXT value);
void  glSecondaryColor3ubvEXT(const GLubyte *v);
void  glVertexAttribL4dv(GLuint index, const GLdouble *v);
void  glProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat *v);
void  glPatchParameteri(GLenum pname, GLint value);
void  glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void  glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat *weights);
void  glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void  glVertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
void  glMultiTexCoord3svARB(GLenum target, const GLshort *v);
void  glBindProgramNV(GLenum target, GLuint id);
void  glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params);
void  glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params);
GLuint  glGenFragmentShadersATI(GLuint range);
void  glTexBumpParameterivATI(GLenum pname, const GLint *param);
void  glGetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
void  glGetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
void  glTranslatexOES(GLfixed x, GLfixed y, GLfixed z);
void  glVertexAttrib4sv(GLuint index, const GLshort *v);
void  glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
void  glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void  glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glVertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void  glTexEnvxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
void  glGenOcclusionQueriesNV(GLsizei n, GLuint *ids);
void  glLighti(GLenum light, GLenum pname, GLint param);
void  glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
void  glLightf(GLenum light, GLenum pname, GLfloat param);
void  glClientAttribDefaultEXT(GLbitfield mask);
void  glVertexAttrib4bvARB(GLuint index, const GLbyte *v);
void  glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
void  glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params);
GLenum  glGetGraphicsResetStatusKHR();
void  glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
void  glClientActiveVertexStreamATI(GLenum stream);
void  glRasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
void  glSampleCoverage(GLfloat value, GLboolean invert);
void  glClearDepthxOES(GLfixed depth);
void  glTexCoord2fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *n, const GLfloat *v);
void  glSecondaryColor3usv(const GLushort *v);
GLboolean  glUnmapNamedBufferEXT(GLuint buffer);
void  glGetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint *param);
void  glUniform4fvARB(GLint location, GLsizei count, const GLfloat *value);
void  glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetFloati_vEXT(GLenum pname, GLuint index, GLfloat *params);
void  glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name);
void  glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
void  glGenProgramsARB(GLsizei n, GLuint *programs);
void  glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void  glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
void  glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat *params);
void  glUniform2i(GLint location, GLint v0, GLint v1);
void  glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
void  glVertexAttribL1d(GLuint index, GLdouble x);
void  glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
void  glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glMultiTexCoord4bvOES(GLenum texture, const GLbyte *coords);
void  glGetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void **param);
void  glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
void  glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
void  glNormal3fVertex3fvSUN(const GLfloat *n, const GLfloat *v);
void  glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLenum  glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glDrawArraysEXT(GLenum mode, GLint first, GLsizei count);
void  glBlendEquationEXT(GLenum mode);
void  glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glTexEnvf(GLenum target, GLenum pname, GLfloat param);
void  glVertexAttrib2dvNV(GLuint index, const GLdouble *v);
void  glMultiTexCoord1xvOES(GLenum texture, const GLfixed *coords);
void  glGenPerfMonitorsAMD(GLsizei n, GLuint *monitors);
void  glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data);
void  glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glVertexFormatNV(GLint size, GLenum type, GLsizei stride);
void  glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
void  glTexEnvi(GLenum target, GLenum pname, GLint param);
void  glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLboolean  glIsEnabledi(GLenum target, GLuint index);
void  glTexCoord2i(GLint s, GLint t);
void  glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void  glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void  glMakeTextureHandleResidentARB(GLuint64 handle);
void  glMakeImageHandleResidentARB(GLuint64 handle, GLenum access);
void  glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void  glBinormal3dvEXT(const GLdouble *v);
GLsync  glImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
void  glGetMapiv(GLenum target, GLenum query, GLint *v);
void  glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat *params);
void  glCopyPathNV(GLuint resultPath, GLuint srcPath);
void  glPNTrianglesiATI(GLenum pname, GLint param);
void  glBindVertexArrayAPPLE(GLuint array);
void  glObjectPtrLabel(const void *ptr, GLsizei length, const GLchar *label);
GLuint  glGetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void  glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
void  glBindFragDataLocation(GLuint program, GLuint color, const GLchar *name);
void  glTangent3ivEXT(const GLint *v);
void  glUniform4ui64ARB(GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);
void  glSecondaryColor3ubv(const GLubyte *v);
void  glMakeTextureHandleNonResidentNV(GLuint64 handle);
void  glVertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte *v);
void  glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
void  glFogCoordhvNV(const GLhalfNV *fog);
void  glGetnPolygonStippleARB(GLsizei bufSize, GLubyte *pattern);
void  glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glLightModelf(GLenum pname, GLfloat param);
void  glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void  glTangent3dvEXT(const GLdouble *v);
void  glVertexWeighthvNV(const GLhalfNV *weight);
void  glVertexAttrib2svARB(GLuint index, const GLshort *v);
void  glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
void  glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);
void  glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glMultiDrawElementsIndirect(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);
void  glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
void  glCallLists(GLsizei n, GLenum type, const void *lists);
void  glNormal3hvNV(const GLhalfNV *v);
void  glGetPointervKHR(GLenum pname, void **params);
void  glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params);
void  glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void  glTexCoord3i(GLint s, GLint t, GLint r);
void  glVertexAttribI3uiv(GLuint index, const GLuint *v);
void  glPushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void  glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint *coords);
void  glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLhandleARB  glCreateShaderObjectARB(GLenum shaderType);
GLushort  glGetStageIndexNV(GLenum shadertype);
void  glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);
void  glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void **params);
void  glTexCoord3s(GLshort s, GLshort t, GLshort r);
void  glPopDebugGroupKHR();
void  glColor4ubVertex3fvSUN(const GLubyte *c, const GLfloat *v);
GLuint  glGetCommandHeaderNV(GLenum tokenID, GLuint size);
void  glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data);
void  glVertexAttrib1svARB(GLuint index, const GLshort *v);
void  glCombinerParameteriNV(GLenum pname, GLint param);
void  glMatrixMultTransposefEXT(GLenum mode, const GLfloat *m);
void  glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points);
GLboolean  glAreTexturesResident(GLsizei n, const GLuint *textures, GLboolean *residences);
void  glProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
void  glIndexPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
void  glRasterPos4sv(const GLshort *v);
void  glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
void  glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void  glResizeBuffersMESA();
void  glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glClientActiveTextureARB(GLenum texture);
void  glBindVertexArray(GLuint array);
void  glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
void  glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
void  glColor4i(GLint red, GLint green, GLint blue, GLint alpha);
void  glEdgeFlagFormatNV(GLsizei stride);
void  glNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
void  glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void  glVertex2dv(const GLdouble *v);
void  glBindFramebuffer(GLenum target, GLuint framebuffer);
GLenum  glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
void  glVertexStream4svATI(GLenum stream, const GLshort *coords);
void  glVertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble *v);
void  glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
void  glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat *params);
void  glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glRectfv(const GLfloat *v1, const GLfloat *v2);
void  glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);
void  glSpriteParameterfvSGIX(GLenum pname, const GLfloat *params);
void  glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void  glColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void  glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
GLint  glGetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar *name);
void  glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
void  glViewport(GLint x, GLint y, GLsizei width, GLsizei height);
void  glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLboolean  glIsRenderbuffer(GLuint renderbuffer);
void  glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
void  glTexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void  glPixelStorex(GLenum pname, GLfixed param);
void  glVertexAttribL1dvEXT(GLuint index, const GLdouble *v);
void  glGetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);
void  glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
void  glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
GLboolean  glIsProgramPipelineEXT(GLuint pipeline);
void  glVertex2hvNV(const GLhalfNV *v);
void  glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
void  glArrayElement(GLint i);
void  glValidateProgram(GLuint program);
void  glActiveShaderProgram(GLuint pipeline, GLuint program);
void  glPathCoverDepthFuncNV(GLenum func);
void  glConservativeRasterParameteriNV(GLenum pname, GLint param);
void  glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint *coords);
void  glRecti(GLint x1, GLint y1, GLint x2, GLint y2);
void  glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void  glTexCoord1bOES(GLbyte s);
void  glProgramUniform2i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void  glWindowPos2dARB(GLdouble x, GLdouble y);
void  glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble *params);
void  glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
void  glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
void  glMap1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
void  glTexCoord4fVertex4fvSUN(const GLfloat *tc, const GLfloat *v);
void  glActiveVaryingNV(GLuint program, const GLchar *name);
void  glReferencePlaneSGIX(const GLdouble *equation);
void  glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);
void  glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);
GLuint64  glGetTextureSamplerHandleARB(GLuint texture, GLuint sampler);
void  glBindTexture(GLenum target, GLuint texture);
void  glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
void  glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);
void  glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void  glGetTexGenxvOES(GLenum coord, GLenum pname, GLfixed *params);
void  glDetachShader(GLuint program, GLuint shader);
void  glFinishTextureSUNX();
void  glTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value);
GLint  glGetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar *name);
void  glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void  glVertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
void  glIndexFormatNV(GLenum type, GLsizei stride);
void  glReplacementCodeuiVertex3fvSUN(const GLuint *rc, const GLfloat *v);
void  glViewportIndexedfv(GLuint index, const GLfloat *v);
void  glGetVertexAttribPointervARB(GLuint index, GLenum pname, void **pointer);
void  glTexBumpParameterfvATI(GLenum pname, const GLfloat *param);
void  glMatrixIndexuivARB(GLint size, const GLuint *indices);
void  glVertexAttrib1hNV(GLuint index, GLhalfNV x);
void  glWindowPos3svMESA(const GLshort *v);
void  glWindowPos2fvARB(const GLfloat *v);
void  glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void  glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
void  glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
void  glVertexAttrib1fNV(GLuint index, GLfloat x);
void  glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);
void  glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
void  glClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);
void  glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
void  glMakeTextureHandleNonResidentARB(GLuint64 handle);
void  glVertexAttrib3svNV(GLuint index, const GLshort *v);
void  glVertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble *v);
void  glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glVertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
void  glGetUniformiv(GLuint program, GLint location, GLint *params);
void  glWindowPos2fvMESA(const GLfloat *v);
void  glBindBuffer(GLenum target, GLuint buffer);
void  glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
void  glDisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
void  glValidateProgramARB(GLhandleARB programObj);
void  glTexGenf(GLenum coord, GLenum pname, GLfloat param);
void  glTexGend(GLenum coord, GLenum pname, GLdouble param);
void  glTexGeni(GLenum coord, GLenum pname, GLint param);
void  glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers);
void  glDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines);
void  glVertexAttrib1fvNV(GLuint index, const GLfloat *v);
GLboolean  glIsQueryARB(GLuint id);
void  glEnableVariantClientStateEXT(GLuint id);
void  glScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
void  glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint *data);
void  glConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers);
void  glVertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glMultiTexCoord3ivARB(GLenum target, const GLint *v);
void  glRasterPos4dv(const GLdouble *v);
GLboolean  glIsTextureHandleResidentARB(GLuint64 handle);
void  glRasterPos2dv(const GLdouble *v);
void  glWindowPos4ivMESA(const GLint *v);
void  glGetVariantPointervEXT(GLuint id, GLenum value, void **data);
void * glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glTexCoord2iv(const GLint *v);
GLuint  glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const*strings);
void  glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params);
void  glPNTrianglesfATI(GLenum pname, GLfloat param);
void  glGlobalAlphaFactorusSUN(GLushort factor);
void  glVertexAttrib3dvNV(GLuint index, const GLdouble *v);
void  glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
void  glVertex2s(GLshort x, GLshort y);
void  glGenerateMipmap(GLenum target);
void  glCompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void  glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp);
void  glTextureRangeAPPLE(GLenum target, GLsizei length, const void *pointer);
void  glDeleteLists(GLuint list, GLsizei range);
void  glProgramUniform3i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void  glPointParameteri(GLenum pname, GLint param);
void  glColor4iv(const GLint *v);
GLboolean  glUnmapBuffer(GLenum target);
void  glSampleMaskEXT(GLclampf value, GLboolean invert);
void  glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glPointParameterf(GLenum pname, GLfloat param);
void  glVertexAttrib1sARB(GLuint index, GLshort x);
void  glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble *v);
void  glTexCoord2s(GLshort s, GLshort t);
void  glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint *params);
void  glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat *params);
void  glTexCoord4dv(const GLdouble *v);
void  glVertexAttrib1svNV(GLuint index, const GLshort *v);
void  glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
void  glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glNormal3dv(const GLdouble *v);
void  glReleaseShaderCompiler();
void  glTexCoord3bvOES(const GLbyte *coords);
GLboolean  glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
void  glTexCoord1dv(const GLdouble *v);
void  glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);
void  glNamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glVertexAttribI3iv(GLuint index, const GLint *v);
void  glSetFenceAPPLE(GLuint fence);
void  glWeightsvARB(GLint size, const GLshort *weights);
void  glShadeModel(GLenum mode);
void  glMapGrid1d(GLint un, GLdouble u1, GLdouble u2);
void  glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glGetDoublei_vEXT(GLenum pname, GLuint index, GLdouble *params);
void  glFogCoordfEXT(GLfloat coord);
void  glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
void  glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void  glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
void  glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
void  glWindowPos4dvMESA(const GLdouble *v);
void  glInvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);
void  glRectiv(const GLint *v1, const GLint *v2);
void  glColorP4ui(GLenum type, GLuint color);
void  glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
void  glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
void  glRasterPos3dv(const GLdouble *v);
void  glVertexBlendEnviATI(GLenum pname, GLint param);
void  glUniform3i64ARB(GLint location, GLint64 x, GLint64 y, GLint64 z);
void  glTexCoord1hvNV(const GLhalfNV *v);
void  glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
void  glReadBuffer(GLenum src);
void  glBlendEquationiARB(GLuint buf, GLenum mode);
void  glColor4ubv(const GLubyte *v);
void  glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params);
void  glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void *data);
void  glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble *params);
void  glGetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void  glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT *params);
void  glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat *params);
void  glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void  glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
void  glPixelTexGenParameteriSGIS(GLenum pname, GLint param);
void  glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void *table);
void  glUniform1ivARB(GLint location, GLsizei count, const GLint *value);
void  glGenBuffers(GLsizei n, GLuint *buffers);
void  glMultiTexCoord3xvOES(GLenum texture, const GLfixed *coords);
void  glExecuteProgramNV(GLenum target, GLuint id, const GLfloat *params);
void  glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void  glColor3xvOES(const GLfixed *components);
void  glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
void  glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void  glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void  glClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);
void  glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
void  glVertexStream1ivATI(GLenum stream, const GLint *coords);
void  glVertexAttribI2iv(GLuint index, const GLint *v);
GLboolean  glIsFramebuffer(GLuint framebuffer);
void  glGetLightxvOES(GLenum light, GLenum pname, GLfixed *params);
void  glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
void  glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void  glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glMatrixPopEXT(GLenum mode);
void  glActiveShaderProgramEXT(GLuint pipeline, GLuint program);
void  glVariantdvEXT(GLuint id, const GLdouble *addr);
void  glVertexStream1sATI(GLenum stream, GLshort x);
void  glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint *values);
void  glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
void  glVertexAttribI2iEXT(GLuint index, GLint x, GLint y);
void  glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat *v);
void  glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
void  glTexCoordP4uiv(GLenum type, const GLuint *coords);
void  glRectxvOES(const GLfixed *v1, const GLfixed *v2);
void  glGetVariantIntegervEXT(GLuint id, GLenum value, GLint *data);
void  glFragmentCoverageColorNV(GLuint color);
void  glTexGendv(GLenum coord, GLenum pname, const GLdouble *params);
void  glVertexP2uiv(GLenum type, const GLuint *value);
void  glGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups);
void  glMultTransposeMatrixfARB(const GLfloat *m);
void  glVertexAttribI2ivEXT(GLuint index, const GLint *v);
void  glTexCoord2d(GLdouble s, GLdouble t);
void  glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
void  glDeleteStatesNV(GLsizei n, const GLuint *states);
void  glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params);
void  glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glTexCoord2f(GLfloat s, GLfloat t);
void  glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean *pointer);
void  glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);
void  glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
void  glVDPAUFiniNV();
void  glMakeBufferNonResidentNV(GLenum target);
void  glMultiTexCoord2fvARB(GLenum target, const GLfloat *v);
void  glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glMultiTexCoord1sARB(GLenum target, GLshort s);
GLuint  glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void  glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params);
void  glMultiTexCoord3fv(GLenum target, const GLfloat *v);
void  glMultMatrixxOES(const GLfixed *m);
void  glTextureNormalEXT(GLenum mode);
void  glGetQueryivARB(GLenum target, GLenum pname, GLint *params);
void  glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
void  glVertex3hvNV(const GLhalfNV *v);
void  glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glTexCoord1xvOES(const GLfixed *coords);
void  glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
void  glVertexBlendEnvfATI(GLenum pname, GLfloat param);
void  glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void *image);
void  glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
void  glVertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
void  glCurrentPaletteMatrixARB(GLint index);
void  glFogxvOES(GLenum pname, const GLfixed *param);
void  glCreateRenderbuffers(GLsizei n, GLuint *renderbuffers);
void  glVertexAttrib4Nusv(GLuint index, const GLushort *v);
void  glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT *params);
void  glDepthFunc(GLenum func);
void  glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glEnableClientStateIndexedEXT(GLenum array, GLuint index);
void  glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
void  glProgramUniform4i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);
void  glBlendFunci(GLuint buf, GLenum src, GLenum dst);
void  glMatrixLoadIdentityEXT(GLenum mode);
void  glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLuint  glCreateShaderProgramEXT(GLenum type, const GLchar *string);
void  glVertexAttrib3dv(GLuint index, const GLdouble *v);
void  glBufferStorage(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);
void  glMakeNamedBufferNonResidentNV(GLuint buffer);
void  glGetFloati_v(GLenum target, GLuint index, GLfloat *data);
void  glUniform2ui64ARB(GLint location, GLuint64 x, GLuint64 y);
void  glBindVertexShaderEXT(GLuint id);
GLint  glGetUniformLocation(GLuint program, const GLchar *name);
void  glVertexStream1svATI(GLenum stream, const GLshort *coords);
void  glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
void  glNamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum *bufs);
void  glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glTexCoordPointervINTEL(GLint size, GLenum type, const void **pointer);
void  glUniform4fv(GLint location, GLsizei count, const GLfloat *value);
void  glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void  glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void  glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void  glCompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void  glAsyncMarkerSGIX(GLuint marker);
void  glTextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void  glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glEndPerfQueryINTEL(GLuint queryHandle);
void  glVertexAttrib4Nbv(GLuint index, const GLbyte *v);
void  glPrioritizeTexturesEXT(GLsizei n, const GLuint *textures, const GLclampf *priorities);
void  glEndConditionalRender();
void  glEnableClientState(GLenum array);
void  glResetHistogram(GLenum target);
void  glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint *params);
void  glUniform1uiEXT(GLint location, GLuint v0);
void  glMultiTexCoord2sv(GLenum target, const GLshort *v);
void  glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glMultiTexCoord2iARB(GLenum target, GLint s, GLint t);
void  glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params);
void  glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
void  glVertexAttrib4iv(GLuint index, const GLint *v);
void  glWindowPos3dvMESA(const GLdouble *v);
void  glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label);
void  glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
void  glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void  glGetTexGendv(GLenum coord, GLenum pname, GLdouble *params);
void  glVertex4xOES(GLfixed x, GLfixed y, GLfixed z);
void  glVertexAttribI2uivEXT(GLuint index, const GLuint *v);
void  glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat *params);
void  glColor3usv(const GLushort *v);
void  glGetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
void  glIndexxvOES(const GLfixed *component);
void  glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLboolean  glAreProgramsResidentNV(GLsizei n, const GLuint *programs, GLboolean *residences);
void  glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
void  glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
void  glSecondaryColor3bvEXT(const GLbyte *v);
GLuint64  glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void  glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
void  glVertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble *v);
void  glVertexStream2sATI(GLenum stream, GLshort x, GLshort y);
void  glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void *row, GLsizei columnBufSize, void *column, void *span);
void  glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glActiveStencilFaceEXT(GLenum face);
void  glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glPointSizexOES(GLfixed size);
void  glRasterPos2sv(const GLshort *v);
GLuint  glBindParameterEXT(GLenum value);
void  glTexCoord1sv(const GLshort *v);
void  glBlendParameteriNV(GLenum pname, GLint value);
void  glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble *params);
void  glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat *params);
void  glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);
void  glVertex2i(GLint x, GLint y);
void  glGetFloatv(GLenum pname, GLfloat *data);
void  glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
void  glWeightdvARB(GLint size, const GLdouble *weights);
GLboolean  glIsTransformFeedbackNV(GLuint id);
void  glWindowPos3f(GLfloat x, GLfloat y, GLfloat z);
GLintptr  glGetUniformOffsetEXT(GLuint program, GLint location);
void  glSecondaryColorP3uiv(GLenum type, const GLuint *color);
void  glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void *img);
void  glGetIntegerv(GLenum pname, GLint *data);
void  glMatrixLoaddEXT(GLenum mode, const GLdouble *m);
GLfloat  glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
void  glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
void  glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
GLboolean  glIsQuery(GLuint id);
void  glMapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
void  glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void  glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT *params);
void  glEnableIndexedEXT(GLenum target, GLuint index);
void  glTexCoord1bvOES(const GLbyte *coords);
void  glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glMultMatrixd(const GLdouble *m);
void  glMultMatrixf(const GLfloat *m);
void  glReplacementCodePointerSUN(GLenum type, GLsizei stride, const void **pointer);
void  glVertexAttrib4Nubv(GLuint index, const GLubyte *v);
void  glVertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glCompileShaderARB(GLhandleARB shaderObj);
void  glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
void  glNormalStream3fvATI(GLenum stream, const GLfloat *coords);
void  glColor4usv(const GLushort *v);
void  glMapGrid1f(GLint un, GLfloat u1, GLfloat u2);
void  glPolygonStipple(const GLubyte *mask);
void  glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glInterleavedArrays(GLenum format, GLsizei stride, const void *pointer);
void  glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
GLint  glGetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar *name);
void  glGetFramebufferParameteriv(GLenum target, GLenum pname, GLint *params);
void  glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort *values);
void  glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params);
void  glGetPointervEXT(GLenum pname, void **params);
void  glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glCopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void  glVertexAttribI1uiv(GLuint index, const GLuint *v);
void  glVertex3xvOES(const GLfixed *coords);
void  glReplacementCodeuivSUN(const GLuint *code);
void  glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
void  glColor3fv(const GLfloat *v);
void  glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
void  glStopInstrumentsSGIX(GLint marker);
void  glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void  glUniform2ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
void  glMakeNamedBufferResidentNV(GLuint buffer, GLenum access);
GLenum  glPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);
void  glEnableVertexAttribAPPLE(GLuint index, GLenum pname);
void  glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint *params);
void  glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
void  glNamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
void  glGetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint *param);
void  glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLboolean  glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface);
void  glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void  glVertexAttribI1ivEXT(GLuint index, const GLint *v);
GLboolean  glIsAsyncMarkerSGIX(GLuint marker);
void  glCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle);
void  glTexCoord3sv(const GLshort *v);
GLboolean  glIsCommandListNV(GLuint list);
void  glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
void  glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params);
void  glMinSampleShading(GLfloat value);
void  glVertex2fv(const GLfloat *v);
void  glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void  glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void  glVariantsvEXT(GLuint id, const GLshort *addr);
void  glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value);
void  glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
void  glGetDoublei_v(GLenum target, GLuint index, GLdouble *data);
void  glVertexAttrib1sv(GLuint index, const GLshort *v);
void  glBindSampler(GLuint unit, GLuint sampler);
void  glLineWidth(GLfloat width);
void  glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat *params);
void  glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void  glVertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
void  glGetIntegeri_v(GLenum target, GLuint index, GLint *data);
void  glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void  glVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);
void  glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);
void  glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint *location);
void  glWindowPos2iv(const GLint *v);
void  glVertexStream1dATI(GLenum stream, GLdouble x);
void  glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
void  glFogiv(GLenum pname, const GLint *params);
GLuint64  glGetTextureHandleNV(GLuint texture);
void  glLightModeliv(GLenum pname, const GLint *params);
void  glDepthRangef(GLfloat n, GLfloat f);
void  glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint *params);
void  glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);
void  glDeleteProgramsARB(GLsizei n, const GLuint *programs);
void  glWindowPos3fvARB(const GLfloat *v);
void  glFeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed *buffer);
void  glGetTexBumpParameterfvATI(GLenum pname, GLfloat *param);
void  glEnablei(GLenum target, GLuint index);
void  glBindProgramARB(GLenum target, GLuint program);
void  glEvalCoord1fv(const GLfloat *u);
void  glProgramUniform3ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void  glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glMultiTexCoord2hvNV(GLenum target, const GLhalfNV *v);
void  glSampleCoverageARB(GLfloat value, GLboolean invert);
void  glProgramUniform2ui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *value);
void  glPixelDataRangeNV(GLenum target, GLsizei length, const void *pointer);
void  glVertexStream3svATI(GLenum stream, const GLshort *coords);
void  glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);
void  glTexCoord3hvNV(const GLhalfNV *v);
void  glSampleMaski(GLuint maskNumber, GLbitfield mask);
void  glIndexFuncEXT(GLenum func, GLclampf ref);
void  glPointParameteriNV(GLenum pname, GLint param);
void  glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params);
void  glUniform2i64ARB(GLint location, GLint64 x, GLint64 y);
void  glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);
void  glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void  glVertexAttrib2dv(GLuint index, const GLdouble *v);
void  glVariantubvEXT(GLuint id, const GLubyte *addr);
void  glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint *params);
void  glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glEnableVertexArrayEXT(GLuint vaobj, GLenum array);
void  glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat *params);
void  glEdgeFlag(GLboolean flag);
void  glProgramUniform1ui(GLuint program, GLint location, GLuint v0);
void  glVertex3d(GLdouble x, GLdouble y, GLdouble z);
void  glVertex3f(GLfloat x, GLfloat y, GLfloat z);
void  glGetColorTable(GLenum target, GLenum format, GLenum type, void *table);
void  glPrimitiveBoundingBoxARB(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);
void  glMultiTexCoord4ivARB(GLenum target, const GLint *v);
void  glVertex3s(GLshort x, GLshort y, GLshort z);
void  glTexCoordP2ui(GLenum type, GLuint coords);
void  glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
void  glPrimitiveRestartIndexNV(GLuint index);
void  glRectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
void  glCopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
void  glGenProgramsNV(GLsizei n, GLuint *programs);
void  glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
void  glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
void  glTextureParameteriv(GLuint texture, GLenum pname, const GLint *param);
void  glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);
void  glMultiTexCoord3fvARB(GLenum target, const GLfloat *v);
void  glUniform2fvARB(GLint location, GLsizei count, const GLfloat *value);
void  glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits);
void  glNormalPointer(GLenum type, GLsizei stride, const void *pointer);
void  glNamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
void  glVertexAttrib4NsvARB(GLuint index, const GLshort *v);
void  glPassThrough(GLfloat token);
void  glSecondaryColorP3ui(GLenum type, GLuint color);
GLboolean  glIsImageHandleResidentARB(GLuint64 handle);
void  glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
void  glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBegin(GLenum mode);
void  glEvalCoord2dv(const GLdouble *u);
void  glColor3ubv(const GLubyte *v);
void  glFogCoordfvEXT(const GLfloat *coord);
void  glVertexP3ui(GLenum type, GLuint value);
void  glLightfv(GLenum light, GLenum pname, const GLfloat *params);
void  glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
void  glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
GLboolean  glTestObjectAPPLE(GLenum object, GLuint name);
void  glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);
void  glTangentPointerEXT(GLenum type, GLsizei stride, const void *pointer);
void  glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void  glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params);
void  glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers);
void  glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint *params);
void  glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
void  glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint *params);
void  glNamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf);
void  glTexParameteriv(GLenum target, GLenum pname, const GLint *params);
void  glUniform4ivARB(GLint location, GLsizei count, const GLint *value);
void  glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
void  glVertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
void  glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
void  glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glGetNamedStringivARB(GLint namelen, const GLchar *name, GLenum pname, GLint *params);
void  glVertexAttribL1i64vNV(GLuint index, const GLint64EXT *v);
void  glTransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer);
void  glIndexsv(const GLshort *c);
void  glPointParameterivNV(GLenum pname, const GLint *params);
void  glGetDetailTexFuncSGIS(GLenum target, GLfloat *points);
void  glTexCoordP3uiv(GLenum type, const GLuint *coords);
void  glReplacementCodeuiColor3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *v);
void  glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap);
void  glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void *data);
void  glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);
void  glGetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);
void  glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
void  glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glGetQueryiv(GLenum target, GLenum pname, GLint *params);
void  glGetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint *param);
void  glListParameterivSGIX(GLuint list, GLenum pname, const GLint *params);
void  glFragmentLightModelivSGIX(GLenum pname, const GLint *params);
void  glTexCoord4i(GLint s, GLint t, GLint r, GLint q);
void  glObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void  glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLuint64  glGetTextureHandleARB(GLuint texture);
void  glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
void  glColorTableParameteriv(GLenum target, GLenum pname, const GLint *params);
void  glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
void  glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glCoverageModulationTableNV(GLsizei n, const GLfloat *v);
void  glPointParameteriv(GLenum pname, const GLint *params);
void  glMultiTexCoord4svARB(GLenum target, const GLshort *v);
void  glNormal3fv(const GLfloat *v);
void  glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glTexCoord1fv(const GLfloat *v);
void  glNormal3xvOES(const GLfixed *coords);
void  glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void  glUniform1i64vARB(GLint location, GLsizei count, const GLint64 *value);
void  glMultiTexCoord1dv(GLenum target, const GLdouble *v);
void  glTexCoord3fv(const GLfloat *v);
void  glGetFirstPerfQueryIdINTEL(GLuint *queryId);
void  glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);
void  glTextureMaterialEXT(GLenum face, GLenum mode);
void  glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint *coords);
void  glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void  glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void  glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
void  glGetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glTexCoord4xvOES(const GLfixed *coords);
void  glDepthRange(GLdouble near, GLdouble far);
void  glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params);
void  glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
void  glDisableClientStateIndexedEXT(GLenum array, GLuint index);
void  glDrawBuffer(GLenum buf);
void  glMultiDrawArraysIndirectBindlessNV(GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
void  glGetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort *values);
void  glRasterPos3fv(const GLfloat *v);
void  glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value);
void  glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);
void  glGetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);
void  glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length);
void  glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
void  glWindowPos2dvMESA(const GLdouble *v);
void  glClearIndex(GLfloat c);
void  glProvokingVertexEXT(GLenum mode);
void  glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glNormalStream3bvATI(GLenum stream, const GLbyte *coords);
void  glFlush();
void  glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLuint  glGenVertexShadersEXT(GLuint range);
void  glProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
void  glEvaluateDepthValuesARB();
void  glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
void  glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params);
void  glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
void  glPrioritizeTextures(GLsizei n, const GLuint *textures, const GLfloat *priorities);
void  glSelectBuffer(GLsizei size, GLuint *buffer);
void  glWindowPos3fvMESA(const GLfloat *v);
void  glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glVertex4xvOES(const GLfixed *coords);
void  glTexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void  glWindowPos2sARB(GLshort x, GLshort y);
void  glStencilOpValueAMD(GLenum face, GLuint value);
void  glProgramVertexLimitNV(GLenum target, GLint limit);
void  glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, void **params);
void  glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
void  glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glClampColor(GLenum target, GLenum clamp);
void  glClearStencil(GLint s);
void  glTexCoordP1uiv(GLenum type, const GLuint *coords);
void  glVertexAttribs3svNV(GLuint index, GLsizei count, const GLshort *v);
void  glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);
void  glMakeTextureHandleResidentNV(GLuint64 handle);
void  glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
GLboolean  glIsFenceAPPLE(GLuint fence);
void  glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
void  glVertexAttribI4bvEXT(GLuint index, const GLbyte *v);
void  glUniform2fARB(GLint location, GLfloat v0, GLfloat v1);
void  glNormalFormatNV(GLenum type, GLsizei stride);
void  glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);
GLboolean  glIsTexture(GLuint texture);
void  glVertex2f(GLfloat x, GLfloat y);
void  glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glVertex2d(GLdouble x, GLdouble y);
void  glBeginQueryIndexed(GLenum target, GLuint index, GLuint id);
void  glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void  glPolygonOffset(GLfloat factor, GLfloat units);
void  glTangent3bvEXT(const GLbyte *v);
void  glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glGetProgramiv(GLuint program, GLenum pname, GLint *params);
void  glMatrixIndexubvARB(GLint size, const GLubyte *indices);
void  glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT *params);
void * glMapBufferARB(GLenum target, GLenum access);
void  glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
void  glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
void  glLineWidthxOES(GLfixed width);
void  glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint *params);
void  glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params);
void  glPixelTexGenParameterivSGIS(GLenum pname, const GLint *params);
void  glGenQueries(GLsizei n, GLuint *ids);
void  glGetPixelMapfv(GLenum map, GLfloat *values);
void  glBlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glResetMinmax(GLenum target);
void  glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glVertexBlendARB(GLint count);
GLint  glGetVaryingLocationNV(GLuint program, const GLchar *name);
void  glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint *params);
void  glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void  glDeleteSamplers(GLsizei count, const GLuint *samplers);
void  glGetLightxOES(GLenum light, GLenum pname, GLfixed *params);
void  glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params);
void  glTextureBarrierNV();
void  glVertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void  glGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params);
void  glGetTextureParameterfv(GLuint texture, GLenum pname, GLfloat *params);
void  glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
void  glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat *val);
void * glMapObjectBufferATI(GLuint buffer);
void  glGetPathCommandsNV(GLuint path, GLubyte *commands);
void  glVertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void  glMatrixMode(GLenum mode);
void  glColorFormatNV(GLint size, GLenum type, GLsizei stride);
void  glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
void  glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glLoadMatrixxOES(const GLfixed *m);
void  glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
void  glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
void  glBindTextures(GLuint first, GLsizei count, const GLuint *textures);
void  glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
void  glGetClipPlanexOES(GLenum plane, GLfixed *equation);
void  glSecondaryColor3uivEXT(const GLuint *v);
void  glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);
void  glGetDoublev(GLenum pname, GLdouble *data);
void  glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glVertexAttrib1d(GLuint index, GLdouble x);
void  glGetProgramStringARB(GLenum target, GLenum pname, void *string);
void  glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);
void  glUniform4dv(GLint location, GLsizei count, const GLdouble *value);
void  glGlobalAlphaFactordSUN(GLdouble factor);
void  glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);
void  glVertexAttrib3dvARB(GLuint index, const GLdouble *v);
void  glInvalidateBufferData(GLuint buffer);
void  glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m);
void  glCompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void  glTexCoord3xvOES(const GLfixed *coords);
void  glGenTexturesEXT(GLsizei n, GLuint *textures);
void  glTangent3iEXT(GLint tx, GLint ty, GLint tz);
void  glClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void *data);
void  glBinormal3bvEXT(const GLbyte *v);
void  glUniform3fv(GLint location, GLsizei count, const GLfloat *value);
void  glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort *values);
void  glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
void  glGetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 *param);
void  glDisableIndexedEXT(GLenum target, GLuint index);
void  glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
void  glConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
void  glGetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed *params);
void  glMultiDrawElements(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);
void  glMakeImageHandleNonResidentNV(GLuint64 handle);
void  glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void  glNormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
void  glVertexAttribL4i64vNV(GLuint index, const GLint64EXT *v);
void  glDrawBuffers(GLsizei n, const GLenum *bufs);
void  glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void  glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box);
void  glNamedFramebufferReadBuffer(GLuint framebuffer, GLenum src);
void  glMultiTexCoord2svARB(GLenum target, const GLshort *v);
void  glVertexAttribI1uivEXT(GLuint index, const GLuint *v);
void  glGetTexGenfv(GLenum coord, GLenum pname, GLfloat *params);
void  glBeginQueryARB(GLenum target, GLuint id);
void  glUniform1iARB(GLint location, GLint v0);
void  glVertex4bvOES(const GLbyte *coords);
void  glUniform1fvARB(GLint location, GLsizei count, const GLfloat *value);
void  glMultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void  glBindTransformFeedback(GLenum target, GLuint id);
void  glMultiTexCoord2iv(GLenum target, const GLint *v);
void  glVertexAttribI4ivEXT(GLuint index, const GLint *v);
void  glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void  glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
void  glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
void  glTexCoord1hNV(GLhalfNV s);
void  glGenFencesNV(GLsizei n, GLuint *fences);
void  glRasterPos3iv(const GLint *v);
void  glVertexP2ui(GLenum type, GLuint value);
void  glMultiTexCoord1hvNV(GLenum target, const GLhalfNV *v);
void  glGetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void *image);
void  glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
void  glTexCoord4sv(const GLshort *v);
void  glUniform2uiv(GLint location, GLsizei count, const GLuint *value);
void  glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
void  glBeginConditionalRenderNVX(GLuint id);
void  glFinish();
void  glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params);
void  glRasterPos2s(GLshort x, GLshort y);
void  glVertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff);
void  glFinishObjectAPPLE(GLenum object, GLint name);
void  glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *v);
void  glUniform1uiv(GLint location, GLsizei count, const GLuint *value);
void  glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glIndexdv(const GLdouble *c);
void  glTexCoord3iv(const GLint *v);
void  glClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
void  glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);
void  glClearDepth(GLdouble depth);
void  glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glVertexWeightfvEXT(const GLfloat *weight);
void  glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint *params);
void  glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void  glVertex4dv(const GLdouble *v);
void  glWeightivARB(GLint size, const GLint *weights);
void  glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);
void  glInsertComponentEXT(GLuint res, GLuint src, GLuint num);
void  glCreateTextures(GLenum target, GLsizei n, GLuint *textures);
void  glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glCreateBuffers(GLsizei n, GLuint *buffers);
void  glVertexAttrib1sNV(GLuint index, GLshort x);
void  glMultiTexCoord2xvOES(GLenum texture, const GLfixed *coords);
void  glTexGenxvOES(GLenum coord, GLenum pname, const GLfixed *params);
void  glMultTransposeMatrixf(const GLfloat *m);
void  glBeginTransformFeedbackEXT(GLenum primitiveMode);
void  glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
void  glFreeObjectBufferATI(GLuint buffer);
void  glBlendBarrierNV();
void  glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint *params);
void  glEdgeFlagv(const GLboolean *flag);
void  glVariantivEXT(GLuint id, const GLint *addr);
void  glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
void  glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint *params);
void  glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
void  glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint *value);
void  glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);
void  glMakeImageHandleNonResidentARB(GLuint64 handle);
void  glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
void  glDeleteQueries(GLsizei n, const GLuint *ids);
void  glNormalP3uiv(GLenum type, const GLuint *coords);
void  glRasterPos2d(GLdouble x, GLdouble y);
void  glInitNames();
void  glBinormal3fvEXT(const GLfloat *v);
void  glColor3dv(const GLdouble *v);
void  glVertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
void  glArrayElementEXT(GLint i);
void  glGetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void  glIndexxOES(GLfixed component);
void  glPopGroupMarkerEXT();
void  glClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);
void  glSetLocalConstantEXT(GLuint id, GLenum type, const void *addr);
void  glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
void  glColor4hvNV(const GLhalfNV *v);
void  glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params);
void  glDispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
void  glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);
void  glUniform3i(GLint location, GLint v0, GLint v1, GLint v2);
void  glFragmentColorMaterialSGIX(GLenum face, GLenum mode);
void  glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);
void  glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void  glLogicOp(GLenum opcode);
void  glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
void  glPixelTransferf(GLenum pname, GLfloat param);
void  glGetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint *params);
void  glMultiTexCoord1xOES(GLenum texture, GLfixed s);
void  glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glUniform2i64vARB(GLint location, GLsizei count, const GLint64 *value);
void  glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
void  glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);
void  glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
void  glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
void  glRasterPos4xvOES(const GLfixed *coords);
void  glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
void  glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
void  glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glVertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glProvokingVertex(GLenum mode);
void  glAccumxOES(GLenum op, GLfixed value);
void  glShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);
void  glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint *params);
void  glPointParameterxvOES(GLenum pname, const GLfixed *params);
void  glCreateStatesNV(GLsizei n, GLuint *states);
void  glClearDepthdNV(GLdouble depth);
void  glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
void  glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
void  glTexGeniv(GLenum coord, GLenum pname, const GLint *params);
void  glDrawElements(GLenum mode, GLsizei count, GLenum type, const void *indices);
void  glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glDisableVertexArrayEXT(GLuint vaobj, GLenum array);
void  glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void  glClientActiveTexture(GLenum texture);
void  glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void  glUniform1iv(GLint location, GLsizei count, const GLint *value);
GLuint  glBindLightParameterEXT(GLenum light, GLenum value);
void  glUniform2iARB(GLint location, GLint v0, GLint v1);
void  glDrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
void  glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
void  glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
void  glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
void  glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void *userParam);
void  glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
void  glVertexAttrib4uiv(GLuint index, const GLuint *v);
void  glEndQueryIndexed(GLenum target, GLuint index);
void  glNormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
void  glProgramParameteriARB(GLuint program, GLenum pname, GLint value);
void  glTexEnvxOES(GLenum target, GLenum pname, GLfixed param);
void  glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glDisableVertexAttribAPPLE(GLuint index, GLenum pname);
void  glVariantuivEXT(GLuint id, const GLuint *addr);
void  glBindRenderbuffer(GLenum target, GLuint renderbuffer);
void  glMaterialiv(GLenum face, GLenum pname, const GLint *params);
void  glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values);
void  glVertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
GLboolean  glIsProgram(GLuint program);
void  glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void *indirect, GLsizei primcount, GLsizei stride);
void  glMultiTexCoord4fvARB(GLenum target, const GLfloat *v);
void  glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean *data);
void  glPixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
void  glTexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
void  glVertexAttrib4fv(GLuint index, const GLfloat *v);
void  glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glWindowPos2dvARB(const GLdouble *v);
void  glGetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat *values);
void  glTexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
void  glLoadTransposeMatrixfARB(const GLfloat *m);
GLboolean  glTestFenceNV(GLuint fence);
void  glVertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat *v);
void  glVertexAttrib2fv(GLuint index, const GLfloat *v);
void  glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void  glCombinerParameterfvNV(GLenum pname, const GLfloat *params);
void  glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void  glMultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
void  glBeginConditionalRenderNV(GLuint id, GLenum mode);
void  glDisableClientState(GLenum array);
void  glPathFogGenNV(GLenum genMode);
void  glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);
void  glVertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
void  glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
void  glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint *params);
void  glDisableClientStateiEXT(GLenum array, GLuint index);
void  glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint *data);
void  glColor4uiv(const GLuint *v);
void  glProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void  glMultiDrawElementsIndirectBindlessCountNV(GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);
void  glGetBufferPointervARB(GLenum target, GLenum pname, void **params);
void  glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint *params);
void  glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
void  glEvalMesh1(GLenum mode, GLint i1, GLint i2);
void  glColorPointerListIBM(GLint size, GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
void  glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);
void  glEvalCoord2fv(const GLfloat *u);
void  glLoadTransposeMatrixd(const GLdouble *m);
void  glLoadTransposeMatrixf(const GLfloat *m);
void  glEndConditionalRenderNV();
void  glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
void  glUniform3i64vARB(GLint location, GLsizei count, const GLint64 *value);
void  glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
void  glVertexAttribI1ui(GLuint index, GLuint x);
void  glCompileCommandListNV(GLuint list);
void  glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params);
void  glGetnPolygonStipple(GLsizei bufSize, GLubyte *pattern);
GLboolean  glIsBufferResidentNV(GLenum target);
void  glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint *params);
void  glNamedFramebufferSampleLocationsfvARB(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);
void  glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);
void  glVertexArrayRangeNV(GLsizei length, const void *pointer);
GLboolean  glIsTextureHandleResidentNV(GLuint64 handle);
void  glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params);
void  glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
void  glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
void  glPixelTransferxOES(GLenum pname, GLfixed param);
void  glInvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
void  glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
void  glVertexStream2iATI(GLenum stream, GLint x, GLint y);
void  glGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId);
void  glGetInteger64v(GLenum pname, GLint64 *data);
void  glSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat *val);
void  glClipPlane(GLenum plane, const GLdouble *equation);
void  glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void  glIndexub(GLubyte c);
void  glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params);
void  glVertexAttrib4usvARB(GLuint index, const GLushort *v);
void  glNamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLhandleARB  glGetHandleARB(GLenum pname);
void  glWeightbvARB(GLint size, const GLbyte *weights);
GLboolean  glTestFenceAPPLE(GLuint fence);
void  glVertexAttrib4Niv(GLuint index, const GLint *v);
void  glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value);
void  glColorP4uiv(GLenum type, const GLuint *color);
void  glVertexAttrib4ivARB(GLuint index, const GLint *v);
void  glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
void  glNamedStringARB(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);
void  glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
void  glResetMinmaxEXT(GLenum target);
void  glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m);
void  glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void *string);
void  glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void  glGetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat *params);
void  glMultiTexCoord1fv(GLenum target, const GLfloat *v);
void  glBitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte *bitmap);
void  glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params);
void  glTexCoordP3ui(GLenum type, GLuint coords);
void  glUniform2f(GLint location, GLfloat v0, GLfloat v1);
void  glTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void  glFogCoordPointerEXT(GLenum type, GLsizei stride, const void *pointer);
void  glWindowPos3s(GLshort x, GLshort y, GLshort z);
void  glVertexAttribs2svNV(GLuint index, GLsizei count, const GLshort *v);
void  glClearDepthf(GLfloat d);
void  glTextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glWindowPos3i(GLint x, GLint y, GLint z);
void  glWindowPos3d(GLdouble x, GLdouble y, GLdouble z);
void  glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
GLboolean  glIsEnabledIndexedEXT(GLenum target, GLuint index);
void  glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint *params);
GLboolean  glIsFenceNV(GLuint fence);
void  glColor3us(GLushort red, GLushort green, GLushort blue);
void  glBeginPerfMonitorAMD(GLuint monitor);
void  glGetLightiv(GLenum light, GLenum pname, GLint *params);
void  glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint *params);
void  glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
void  glColor3ub(GLubyte red, GLubyte green, GLubyte blue);
void  glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
void  glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
void  glColor3ui(GLuint red, GLuint green, GLuint blue);
void  glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
void  glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
GLenum  glCheckFramebufferStatusEXT(GLenum target);
void  glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint *v);
void  glMultiTexCoord1ivARB(GLenum target, const GLint *v);
void  glDisableVertexAttribArrayARB(GLuint index);
void  glGetPolygonStipple(GLubyte *mask);
void  glUniform2d(GLint location, GLdouble x, GLdouble y);
void  glVertexAttribI1iEXT(GLuint index, GLint x);
void  glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glGetPathDashArrayNV(GLuint path, GLfloat *dashArray);
void  glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
void  glVertex4hvNV(const GLhalfNV *v);
void  glGetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void  glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glBlendEquation(GLenum mode);
void  glUnlockArraysEXT();
void  glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params);
void  glVertexAttribI4uivEXT(GLuint index, const GLuint *v);
void  glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value);
void  glMultiTexCoord3dv(GLenum target, const GLdouble *v);
void  glColor4sv(const GLshort *v);
void  glVertexStream4ivATI(GLenum stream, const GLint *coords);
void  glGetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);
void  glClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);
void  glGetProgramivNV(GLuint id, GLenum pname, GLint *params);
void  glBeginTransformFeedback(GLenum primitiveMode);
void  glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
void  glTransformFeedbackAttribsNV(GLsizei count, const GLint *attribs, GLenum bufferMode);
void  glColor3iv(const GLint *v);
void  glVertexAttrib3sv(GLuint index, const GLshort *v);
void  glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
void  glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids);
void  glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);
void  glUniform4i64vARB(GLint location, GLsizei count, const GLint64 *value);
void  glProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint *params);
void  glTextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
void  glBindAttribLocation(GLuint program, GLuint index, const GLchar *name);
void  glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);
void  glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glPushGroupMarkerEXT(GLsizei length, const GLchar *marker);
void  glVertexAttrib1dv(GLuint index, const GLdouble *v);
void  glResolveDepthValuesNV();
void  glVertexAttribI4svEXT(GLuint index, const GLshort *v);
void  glMultTransposeMatrixxOES(const GLfixed *m);
void  glGetPixelMapxv(GLenum map, GLint size, GLfixed *values);
void  glFramebufferSampleLocationsfvARB(GLenum target, GLuint start, GLsizei count, const GLfloat *v);
void  glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glSecondaryColor3ivEXT(const GLint *v);
void  glGetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean *data);
void  glGetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint *param);
void  glUniform2ui(GLint location, GLuint v0, GLuint v1);
void  glPixelTransferi(GLenum pname, GLint param);
void  glApplyFramebufferAttachmentCMAAINTEL();
void  glWindowPos2fv(const GLfloat *v);
void  glVertexArrayParameteriAPPLE(GLenum pname, GLint param);
void  glDisablei(GLenum target, GLuint index);
void  glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void  glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT *params);
void  glMultiTexCoord2dvARB(GLenum target, const GLdouble *v);
void  glWeightuivARB(GLint size, const GLuint *weights);
void  glWindowPos2iARB(GLint x, GLint y);
void  glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params);
void  glGetUniformui64vARB(GLuint program, GLint location, GLuint64 *params);
void  glVertexStream4fvATI(GLenum stream, const GLfloat *coords);
void  glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);
void  glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);
void  glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
void  glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glVertexAttrib4svNV(GLuint index, const GLshort *v);
void  glProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
void  glListDrawCommandsStatesClientNV(GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
void  glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params);
void  glBeginTransformFeedbackNV(GLenum primitiveMode);
void  glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);
void  glBinormal3iEXT(GLint bx, GLint by, GLint bz);
void  glEvalPoint1(GLint i);
void  glEvalPoint2(GLint i, GLint j);
void  glPauseTransformFeedback();
void  glWindowPos2sMESA(GLshort x, GLshort y);
void  glGlobalAlphaFactorbSUN(GLbyte factor);
void  glCreateTransformFeedbacks(GLsizei n, GLuint *ids);
void  glTexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);
void  glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);
void  glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void  glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params);
void  glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void  glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params);
void  glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void  glVertexAttribI4iv(GLuint index, const GLint *v);
void  glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);
GLboolean  glIsOcclusionQueryNV(GLuint id);
void  glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint *params);
void  glGetVertexArrayiv(GLuint vaobj, GLenum pname, GLint *param);
void  glVertexAttrib4fvARB(GLuint index, const GLfloat *v);
void  glLoadName(GLuint name);
void  glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint *params);
void  glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glLoadMatrixf(const GLfloat *m);
void  glLoadMatrixd(const GLdouble *m);
void  glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params);
void  glCallCommandListNV(GLuint list);
void  glCullParameterfvEXT(GLenum pname, GLfloat *params);
void  glUniform3dv(GLint location, GLsizei count, const GLdouble *value);
void  glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
void  glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
GLboolean  glIsBufferARB(GLuint buffer);
void  glMultiTexCoord1bOES(GLenum texture, GLbyte s);
void  glFogCoordhNV(GLhalfNV fog);
void  glVertexAttrib4dvNV(GLuint index, const GLdouble *v);
GLuint  glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
void  glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, void *image);
void  glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glVertexAttrib1dvNV(GLuint index, const GLdouble *v);
void  glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);
void  glBindSamplers(GLuint first, GLsizei count, const GLuint *samplers);
void  glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint *params);
void  glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 *params);
void  glVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT *v);
void  glGetVideoivNV(GLuint video_slot, GLenum pname, GLint *params);
void  glGetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void  glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value);
void  glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glBeginFragmentShaderATI();
void  glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void  glGenNamesAMD(GLenum identifier, GLuint num, GLuint *names);
void  glPathParameteriNV(GLuint path, GLenum pname, GLint value);
void  glCreateCommandListsNV(GLsizei n, GLuint *lists);
void  glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines);
void  glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
void  glVertex3fv(const GLfloat *v);
GLboolean  glIsNameAMD(GLenum identifier, GLuint name);
void  glWindowPos2s(GLshort x, GLshort y);
void  glSecondaryColor3iEXT(GLint red, GLint green, GLint blue);
void  glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
void  glWindowPos2i(GLint x, GLint y);
void  glWindowPos2f(GLfloat x, GLfloat y);
void  glWindowPos2d(GLdouble x, GLdouble y);
void  glUniform4uivEXT(GLint location, GLsizei count, const GLuint *value);
void  glOrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
void  glUniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint *indices);
void  glRectdv(const GLdouble *v1, const GLdouble *v2);
void  glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
void  glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
void  glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);
void  glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
void  glColorP3uiv(GLenum type, const GLuint *color);
void  glFogCoordfv(const GLfloat *coord);
void  glCompileShader(GLuint shader);
void  glTexCoord2hNV(GLhalfNV s, GLhalfNV t);
void  glUniform1uivEXT(GLint location, GLsizei count, const GLuint *value);
void  glIndexfv(const GLfloat *c);
void  glGetUniformuivEXT(GLuint program, GLint location, GLuint *params);
void  glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat *values);
void  glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
void  glTexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
void  glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
void  glDepthRangefOES(GLclampf n, GLclampf f);
void  glNormal3sv(const GLshort *v);
void  glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat *params);
void  glColor4fNormal3fVertex3fvSUN(const GLfloat *c, const GLfloat *n, const GLfloat *v);
void  glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *row, const void *column);
void  glTexParameterxOES(GLenum target, GLenum pname, GLfixed param);
void  glClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
void  glInvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum *attachments);
void  glWeightubvARB(GLint size, const GLubyte *weights);
void  glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);
void  glVertexAttrib1f(GLuint index, GLfloat x);
void  glVertex4fv(const GLfloat *v);
void  glClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void  glGetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void  glClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);
void  glEndVertexShaderEXT();
void  glVertexAttrib1s(GLuint index, GLshort x);
void  glMultiTexCoord4dvARB(GLenum target, const GLdouble *v);
void  glMultiTexCoord1sv(GLenum target, const GLshort *v);
void  glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glGetClipPlanefOES(GLenum plane, GLfloat *equation);
void  glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glMultiTexCoord4hvNV(GLenum target, const GLhalfNV *v);
void  glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
void  glGetSeparableFilter(GLenum target, GLenum format, GLenum type, void *row, void *column, void *span);
void  glDeleteProgram(GLuint program);
void  glColor4bv(const GLbyte *v);
void  glRasterPos2f(GLfloat x, GLfloat y);
void  glNamedBufferPageCommitmentARB(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
void  glLoadIdentity();
void  glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glRasterPos4iv(const GLint *v);
void  glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value);
void  glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void  glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
void  glTextureBarrier();
void  glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
void  glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
void  glTexCoord2bvOES(const GLbyte *coords);
void  glEvalCoord2xOES(GLfixed u, GLfixed v);
void  glGetSharpenTexFuncSGIS(GLenum target, GLfloat *points);
void  glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void  glIglooInterfaceSGIX(GLenum pname, const void *params);
void  glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
void  glDrawArraysIndirect(GLenum mode, const void *indirect);
void  glGenVertexArrays(GLsizei n, GLuint *arrays);
void  glEnableVertexArrayAttrib(GLuint vaobj, GLuint index);
void  glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glVertexBindingDivisor(GLuint bindingindex, GLuint divisor);
void  glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params);
void  glGetCoverageModulationTableNV(GLsizei bufsize, GLfloat *v);
void  glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
void  glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);
void  glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
void  glGetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void  glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params);
void  glStartInstrumentsSGIX();
GLboolean  glAreTexturesResidentEXT(GLsizei n, const GLuint *textures, GLboolean *residences);
void  glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat *data);
void  glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);
void  glMapParameterivNV(GLenum target, GLenum pname, const GLint *params);
void  glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
void  glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params);
void  glFrameTerminatorGREMEDY();
void  glBlendBarrierKHR();
void  glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
void  glPrimitiveRestartNV();
void  glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);
void  glVertexAttribL1ui64vARB(GLuint index, const GLuint64EXT *v);
void  glPointParameterfvARB(GLenum pname, const GLfloat *params);
void  glVertexAttribs4svNV(GLuint index, GLsizei count, const GLshort *v);
void  glUniform1ui(GLint location, GLuint v0);
void  glVertexAttrib2fvARB(GLuint index, const GLfloat *v);
void  glBlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
void  glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
void  glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void  glMemoryBarrier(GLbitfield barriers);
void  glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat *params);
void  glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);
GLboolean  glIsProgramARB(GLuint program);
void  glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
void  glSampleCoveragexOES(GLclampx value, GLboolean invert);
GLint  glGetFragDataLocation(GLuint program, const GLchar *name);
void  glMultiTexCoord1svARB(GLenum target, const GLshort *v);
void  glGetMapxvOES(GLenum target, GLenum query, GLfixed *v);
void  glTextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void  glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params);
void  glVertexAttrib4NbvARB(GLuint index, const GLbyte *v);
void  glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint *values);
void  glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void *pointer);
void  glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glEnableClientStateiEXT(GLenum array, GLuint index);
void  glClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);
void  glEvalCoord1xvOES(const GLfixed *coords);
void  glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
void  glGetTextureParameterIiv(GLuint texture, GLenum pname, GLint *params);
void  glVariantusvEXT(GLuint id, const GLushort *addr);
void  glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);
void  glMultiTexCoord1dARB(GLenum target, GLdouble s);
void  glGetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint *param);
void  glVertexAttribI4ubv(GLuint index, const GLubyte *v);
void  glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
void  glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLboolean  glIsShader(GLuint shader);
void  glConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params);
void  glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glEnableVertexAttribArrayARB(GLuint index);
void  glEnable(GLenum cap);
void  glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);
void  glEdgeFlagPointerListIBM(GLint stride, const GLboolean **pointer, GLint ptrstride);
void  glTexCoord4hvNV(const GLhalfNV *v);
void  glBlendEquationi(GLuint buf, GLenum mode);
GLint  glGetAttribLocation(GLuint program, const GLchar *name);
void  glVertexAttrib4dv(GLuint index, const GLdouble *v);
void  glGetTextureParameteriv(GLuint texture, GLenum pname, GLint *params);
void  glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);
void  glMatrixIndexusvARB(GLint size, const GLushort *indices);
void  glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint *params);
void  glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);
void  glProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
void  glVertexAttrib3svARB(GLuint index, const GLshort *v);
void  glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint *params);
void  glGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines);
void  glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint *params);
void  glUnmapTexture2DINTEL(GLuint texture, GLint level);
void  glVertexAttrib2svNV(GLuint index, const GLshort *v);
void  glWindowPos2ivARB(const GLint *v);
void  glGetVertexAttribPointervNV(GLuint index, GLenum pname, void **pointer);
void  glPushMatrix();
void  glGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params);
void  glGenerateMipmapEXT(GLenum target);
void  glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);
void  glProgramUniform1i(GLuint program, GLint location, GLint v0);
void  glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glProgramUniform1d(GLuint program, GLint location, GLdouble v0);
void  glProgramUniform1f(GLuint program, GLint location, GLfloat v0);
void  glProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
void  glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);
void  glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glIndexiv(const GLint *c);
void  glMultiTexCoord4xvOES(GLenum texture, const GLfixed *coords);
void  glTransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glPixelZoom(GLfloat xfactor, GLfloat yfactor);
GLenum  glVideoCaptureNV(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);
void  glVertex3bvOES(const GLbyte *coords);
void  glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
void  glExtractComponentEXT(GLuint res, GLuint src, GLuint num);
void  glTexCoord2fColor3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *v);
void  glMinmax(GLenum target, GLenum internalformat, GLboolean sink);
void  glColorP3ui(GLenum type, GLuint color);
void  glPointParameterfvSGIS(GLenum pname, const GLfloat *params);
void  glUseProgramObjectARB(GLhandleARB programObj);
void  glFogCoorddEXT(GLdouble coord);
void  glVertexAttrib4fvNV(GLuint index, const GLfloat *v);
void  glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
void  glMultiTexCoord1bvOES(GLenum texture, const GLbyte *coords);
void  glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint *coords);
void  glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void *data);
void  glGetPathParameterivNV(GLuint path, GLenum pname, GLint *value);
void  glTextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
void  glDisableVertexArrayAttrib(GLuint vaobj, GLuint index);
void  glElementPointerATI(GLenum type, const void *pointer);
void  glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);
void  glUniform4iv(GLint location, GLsizei count, const GLint *value);
void  glFogxOES(GLenum pname, GLfixed param);
void  glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points);
void  glClearDepthfOES(GLclampf depth);
void  glDeleteCommandListsNV(GLsizei n, const GLuint *lists);
void  glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
void  glSecondaryColor3dvEXT(const GLdouble *v);
void  glGenTextures(GLsizei n, GLuint *textures);
void  glTextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void  glUniform3uivEXT(GLint location, GLsizei count, const GLuint *value);
void  glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value);
void  glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
void  glMakeBufferResidentNV(GLenum target, GLenum access);
void  glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
void  glActiveTextureARB(GLenum texture);
void  glTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params);
void  glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);
void  glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);
void  glMultiTexCoord1s(GLenum target, GLshort s);
void  glDispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
void  glPathParameterfNV(GLuint path, GLenum pname, GLfloat value);
void  glVertexAttrib2dvARB(GLuint index, const GLdouble *v);
void  glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);
void  glDepthBoundsdNV(GLdouble zmin, GLdouble zmax);
void  glDeleteTexturesEXT(GLsizei n, const GLuint *textures);
void  glDrawBuffersATI(GLsizei n, const GLenum *bufs);
void  glLightModelxvOES(GLenum pname, const GLfixed *param);
void  glApplyTextureEXT(GLenum mode);
void  glVertexStream1dvATI(GLenum stream, const GLdouble *coords);
void  glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void *values);
void  glGetFixedvOES(GLenum pname, GLfixed *params);
void  glSamplePatternEXT(GLenum pattern);
void  glUniform1f(GLint location, GLfloat v0);
void  glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glFogCoorddvEXT(const GLdouble *coord);
void  glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
void  glDeleteFencesNV(GLsizei n, const GLuint *fences);
void  glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value);
void  glFlushStaticDataIBM(GLenum target);
void  glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void  glRasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
void  glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
void  glMultiTexCoord4sv(GLenum target, const GLshort *v);
void  glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value);
void  glEndTransformFeedbackEXT();
void  glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
void  glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glGetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);
void  glGetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint *params);
void  glBindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);
void  glDrawCommandsAddressNV(GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);
void  glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);
void  glMultiTexCoord2dv(GLenum target, const GLdouble *v);
void  glUniform2iv(GLint location, GLsizei count, const GLint *value);
void  glTexCoord2xvOES(const GLfixed *coords);
void  glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void  glFlushVertexArrayRangeAPPLE(GLsizei length, void *pointer);
void  glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void  glTextureParameterf(GLuint texture, GLenum pname, GLfloat param);
void  glMultiTexCoord3dvARB(GLenum target, const GLdouble *v);
void  glFeedbackBuffer(GLsizei size, GLenum type, GLfloat *buffer);
void  glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);
void  glMultiTexCoord2i(GLenum target, GLint s, GLint t);
void  glTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glGetShaderiv(GLuint shader, GLenum pname, GLint *params);
void  glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
void  glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
void  glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glGetPointeri_vEXT(GLenum pname, GLuint index, void **params);
void  glGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);
void  glNamedBufferStorage(GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);
void  glGenQueriesARB(GLsizei n, GLuint *ids);
void  glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
void  glMultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
void  glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
void  glUniform1dv(GLint location, GLsizei count, const GLdouble *value);
void  glSecondaryColor3usvEXT(const GLushort *v);
void  glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint *params);
void  glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);
GLboolean  glIsTextureEXT(GLuint texture);
void  glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint *params);
void  glLinkProgramARB(GLhandleARB programObj);
void  glCoverageModulationNV(GLenum components);
void  glVertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void  glMultiTexCoord4fv(GLenum target, const GLfloat *v);
void  glRasterPos3i(GLint x, GLint y, GLint z);
void  glRasterPos3d(GLdouble x, GLdouble y, GLdouble z);
void  glBlendEquationIndexedAMD(GLuint buf, GLenum mode);
void  glRasterPos3f(GLfloat x, GLfloat y, GLfloat z);
void  glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);
void  glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint *params);
void  glWindowPos2svARB(const GLshort *v);
void  glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params);
void  glGetPointerIndexedvEXT(GLenum target, GLuint index, void **data);
void  glColor4xvOES(const GLfixed *components);
void  glClampColorARB(GLenum target, GLenum clamp);
void  glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *image);
void  glGetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void *values);
void  glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
void  glSpriteParameteriSGIX(GLenum pname, GLint param);
void  glMultiTexCoord2ivARB(GLenum target, const GLint *v);
void  glGetFenceivNV(GLuint fence, GLenum pname, GLint *params);
void  glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);
void  glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGlobalAlphaFactorsSUN(GLshort factor);
void  glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint *params);
void  glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat *params);
GLboolean  glIsNamedBufferResidentNV(GLuint buffer);
void  glMatrixMultdEXT(GLenum mode, const GLdouble *m);
void  glTbufferMask3DFX(GLuint mask);
void  glCoverFillPathNV(GLuint path, GLenum coverMode);
void  glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label);
void  glVertexAttrib1fvARB(GLuint index, const GLfloat *v);
void  glGenerateTextureMipmap(GLuint texture);
void  glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint *params);
void  glMultiDrawElementsBaseVertex(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);
void  glProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint *params);
void  glWindowPos3sv(const GLshort *v);
void  glRotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
void  glMemoryBarrierEXT(GLbitfield barriers);
void  glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
void  glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);
void  glSetFenceNV(GLuint fence, GLenum condition);
void  glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params);
void  glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void  glTexParameterxvOES(GLenum target, GLenum pname, const GLfixed *params);
void  glNamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
void  glInvalidateTexImage(GLuint texture, GLint level);
void  glVertexAttribI4usvEXT(GLuint index, const GLushort *v);
void  glTextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glVertexP3uiv(GLenum type, const GLuint *value);
GLboolean  glIsPathNV(GLuint path);
void  glGetnUniformi64vARB(GLuint program, GLint location, GLsizei bufSize, GLint64 *params);
void  glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);
void  glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
void  glGetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);
void  glDebugMessageCallback(GLDEBUGPROC callback, const void *userParam);
void  glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glVertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
void  glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void *data);
void  glGetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT *params);
void  glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void  glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
void  glVertexPointervINTEL(GLint size, GLenum type, const void **pointer);
GLuint  glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings);
void  glGetBooleani_v(GLenum target, GLuint index, GLboolean *data);
void  glVertex2bvOES(const GLbyte *coords);
void  glSpriteParameterivSGIX(GLenum pname, const GLint *params);
void  glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void *points);
void  glTextureParameterIiv(GLuint texture, GLenum pname, const GLint *params);
void  glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
void  glVertexStream3dvATI(GLenum stream, const GLdouble *coords);
void  glNormalPointerListIBM(GLenum type, GLint stride, const void **pointer, GLint ptrstride);
void  glFogFuncSGIS(GLsizei n, const GLfloat *points);
void  glVertexStream3ivATI(GLenum stream, const GLint *coords);
void  glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);
void  glNewList(GLuint list, GLenum mode);
void  glVertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
void  glHint(GLenum target, GLenum mode);
void  glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);
void  glMultiDrawArraysIndirect(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);
void  glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value);
void  glProgramUniform1i64vARB(GLuint program, GLint location, GLsizei count, const GLint64 *value);
void  glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
void  glPushClientAttribDefaultEXT(GLbitfield mask);
void  glScalef(GLfloat x, GLfloat y, GLfloat z);
void  glScaled(GLdouble x, GLdouble y, GLdouble z);
void  glGetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);
void  glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
void  glDepthRangeArrayv(GLuint first, GLsizei count, const GLdouble *v);
void  glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);
void  glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params);
void  glGetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);
void  glStencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
void  glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint *params);
void  glVertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
void  glTexCoord3f(GLfloat s, GLfloat t, GLfloat r);
void  glProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble *v);
void  glVertexAttribI1i(GLuint index, GLint x);
void  glGetTexParameteriv(GLenum target, GLenum pname, GLint *params);
void  glGetMapParameterivNV(GLenum target, GLenum pname, GLint *params);
void  glGetVertexAttribPointerv(GLuint index, GLenum pname, void **pointer);
void  glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value);
void  glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
void  glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);
void  glWindowPos2iMESA(GLint x, GLint y);
void  glVertex2xvOES(const GLfixed *coords);
void  glGetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void *pixels);
void  glWindowPos2dv(const GLdouble *v);
void  glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
void  glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
void * glMapNamedBufferEXT(GLuint buffer, GLenum access);
void  glDisable(GLenum cap);
GLboolean  glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
void  glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
void  glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value);
void  glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat *params);
void  glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
void  glBinormal3svEXT(const GLshort *v);
void  glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
void  glCopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glVertexAttribI2uiv(GLuint index, const GLuint *v);
void  glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);
void  glBinormalPointerEXT(GLenum type, GLsizei stride, const void *pointer);
void  glGetLightfv(GLenum light, GLenum pname, GLfloat *params);
void  glVertex2bOES(GLbyte x, GLbyte y);
void  glUniform2ivARB(GLint location, GLsizei count, const GLint *value);
void  glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
void  glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
GLuint64  glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
void  glGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params);
GLenum  glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
void  glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void *table);
void  glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
void  glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
void  glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
void  glFogCoorddv(const GLdouble *coord);
void  glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
void  glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
void  glClipPlanefOES(GLenum plane, const GLfloat *equation);
void  glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);
void  glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glPolygonOffsetxOES(GLfixed factor, GLfixed units);
void  glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glUniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 *value);
void  glFragmentLightModelfvSGIX(GLenum pname, const GLfloat *params);
void  glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
void  glBindFragmentShaderATI(GLuint id);
void  glUniform3uiv(GLint location, GLsizei count, const GLuint *value);
void  glGenBuffersARB(GLsizei n, GLuint *buffers);
void  glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat *params);
void  glTexCoord4bvOES(const GLbyte *coords);
void  glClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);
void  glLightModelxOES(GLenum pname, GLfixed param);
void  glColor3xOES(GLfixed red, GLfixed green, GLfixed blue);
void  glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);
void  glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);
void  glVDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);
void  glVertexStream4dvATI(GLenum stream, const GLdouble *coords);
void  glVertexAttrib4NuivARB(GLuint index, const GLuint *v);
void  glGetFogFuncSGIS(GLfloat *points);
void  glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
void  glFlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length);
void  glPushName(GLuint name);
void  glGetClipPlane(GLenum plane, GLdouble *equation);
void  glRasterPos4i(GLint x, GLint y, GLint z, GLint w);
void  glBlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
void  glBindTransformFeedbackNV(GLenum target, GLuint id);
void  glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *param);
void  glIndexubv(const GLubyte *c);
void  glNamedBufferPageCommitmentEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);
GLenum  glCheckNamedFramebufferStatus(GLuint framebuffer, GLenum target);
void  glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat *params);
void  glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
void  glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);
void  glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
void  glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
void  glGetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint *values);
void  glGetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
void  glPopMatrix();
void  glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
GLenum  glGetGraphicsResetStatusARB();
void  glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
void  glActiveTexture(GLenum texture);
void  glEnableVertexAttribArray(GLuint index);
void  glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
void  glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
void  glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
void  glCreateProgramPipelines(GLsizei n, GLuint *pipelines);
void  glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glUniform2uiEXT(GLint location, GLuint v0, GLuint v1);
void  glMultiTexCoord3sv(GLenum target, const GLshort *v);
void  glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);
void  glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params);
void  glDrawTransformFeedbackNV(GLenum mode, GLuint id);
void  glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
void  glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
void  glGetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);
void  glMultiTexCoord4iv(GLenum target, const GLint *v);
void  glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params);
void  glPopDebugGroup();
void  glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
void  glWindowPos2svMESA(const GLshort *v);
void  glGenerateTextureMipmapEXT(GLuint texture, GLenum target);
void  glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void *data);
void  glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
void  glTexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
void  glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint *params);
void  glFlushVertexArrayRangeNV();
void  glSecondaryColor3svEXT(const GLshort *v);
void  glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint *params);
void  glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void  glLoadTransposeMatrixxOES(const GLfixed *m);
void  glDeleteTransformFeedbacksNV(GLsizei n, const GLuint *ids);
void  glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void *img);
void  glIndexMaterialEXT(GLenum face, GLenum mode);
void  glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);
void  glTexCoord2hvNV(const GLhalfNV *v);
void  glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glTexEnviv(GLenum target, GLenum pname, const GLint *params);
void  glEndTransformFeedbackNV();
void  glGlobalAlphaFactoruiSUN(GLuint factor);
void  glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
void  glFlushRasterSGIX();
void  glBlendFunc(GLenum sfactor, GLenum dfactor);
GLuint  glCreateProgram();
void  glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
void  glUniform4ui64vARB(GLint location, GLsizei count, const GLuint64 *value);
void  glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glPrimitiveRestartIndex(GLuint index);
void  glNormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
void  glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
void  glVertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV *v);
void  glWindowPos4svMESA(const GLshort *v);
void  glDeleteFragmentShaderATI(GLuint id);
void  glBindImageTextures(GLuint first, GLsizei count, const GLuint *textures);
void  glMap2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
void  glEnd();
void  glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *param);
void  glUniform1i64NV(GLint location, GLint64EXT x);
void  glPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString);
void  glGetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params);
void  glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);
void  glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray);
void  glSecondaryColor3iv(const GLint *v);
void  glColor3fVertex3fvSUN(const GLfloat *c, const GLfloat *v);
void  glMultTransposeMatrixd(const GLdouble *m);
void  glClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLuint64  glGetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
void  glPixelTexGenSGIX(GLenum mode);
void  glGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params);
void  glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat *data);
void  glPushClientAttrib(GLbitfield mask);
void  glUseShaderProgramEXT(GLenum type, GLuint program);
void  glBindRenderbufferEXT(GLenum target, GLuint renderbuffer);
void  glGetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint *params);
void  glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);
void  glStencilMask(GLuint mask);
void  glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble *params);
void  glSecondaryColor3us(GLushort red, GLushort green, GLushort blue);
void  glVertexAttribI4uiv(GLuint index, const GLuint *v);
void  glVertexAttrib4bv(GLuint index, const GLbyte *v);
GLuint  glGetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar *name);
void  glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
void  glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *image);
void  glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint *params);
void  glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
void  glVertexAttrib1dARB(GLuint index, GLdouble x);
void  glGetNamedBufferPointerv(GLuint buffer, GLenum pname, void **params);
void  glLockArraysEXT(GLint first, GLsizei count);
void  glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void *pointer);
void  glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
void  glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
void  glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
GLuint  glGenAsyncMarkersSGIX(GLsizei range);
void  glGetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
void  glProgramStringARB(GLenum target, GLenum format, GLsizei len, const void *string);
void  glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);
void  glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs);
void  glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz);
void  glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGenTransformFeedbacks(GLsizei n, GLuint *ids);
void  glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params);
void  glPixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
void  glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params);
void  glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params);
void  glVertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
void  glWindowPos2fARB(GLfloat x, GLfloat y);
void  glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);
void  glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);
void  glProgramBinary(GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);
void  glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
void  glVertexAttribI4bv(GLuint index, const GLbyte *v);
void  glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params);
void  glTransformFeedbackStreamAttribsNV(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);
void  glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
void  glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params);
void  glGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);
void  glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
void  glGetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);
void  glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m);
void  glTexParameterIiv(GLenum target, GLenum pname, const GLint *params);
void  glVertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
void  glEndTransformFeedback();
void  glDrawCommandsStatesAddressNV(const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);
void  glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
void  glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);
void  glTexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
void  glBindTextureEXT(GLenum target, GLuint texture);
void  glVertexAttribI1iv(GLuint index, const GLint *v);
void  glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params);
void  glMultiTexCoord3bvOES(GLenum texture, const GLbyte *coords);
void  glVertexAttribDivisor(GLuint index, GLuint divisor);
void  glGetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void *pixels);
GLuint  glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value);
void  glNormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
void  glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);
void  glTexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
void  glSecondaryColor3fvEXT(const GLfloat *v);
void  glDepthRangedNV(GLdouble zNear, GLdouble zFar);
void  glGetUniformi64vARB(GLuint program, GLint location, GLint64 *params);
void  glEndVideoCaptureNV(GLuint video_capture_slot);
GLuint  glGenLists(GLsizei range);
void  glUniform1fARB(GLint location, GLfloat v0);
void  glVertexAttrib4dvARB(GLuint index, const GLdouble *v);
void * glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
void  glMultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
void  glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params);
void  glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
void  glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint *params);
void  glEndList();
void  glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
void  glGenTransformFeedbacksNV(GLsizei n, GLuint *ids);
void  glCombinerParameterivNV(GLenum pname, const GLint *params);
void  glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
void  glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);
void  glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
void  glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);
void  glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void *pixels);
void  glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations);
void  glEvalMapsNV(GLenum target, GLenum mode);
GLint  glGetFragDataLocationEXT(GLuint program, const GLchar *name);
void  glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void *img);
void  glIndexMask(GLuint mask);
void  glDrawBuffersARB(GLsizei n, const GLenum *bufs);
void  glShaderSource(GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);
void  glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers);
void  glTexCoordP2uiv(GLenum type, const GLuint *coords);
void  glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
void  glGetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 *params);
void  glCommandListSegmentsNV(GLuint list, GLuint segments);
void  glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params);
void  glVertexAttribL4dvEXT(GLuint index, const GLdouble *v);
void  glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
void  glProgramUniform2ui64ARB(GLuint program, GLint location, GLuint64 x, GLuint64 y);
void  glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLuint  glNewObjectBufferATI(GLsizei size, const void *pointer, GLenum usage);
void  glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);
void  glBufferData(GLenum target, GLsizeiptr size, const void *data, GLenum usage);
void  glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);
void  glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
void  glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
void  glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
void  glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);
void  glTexCoordP1ui(GLenum type, GLuint coords);
void  glPointParameterfvEXT(GLenum pname, const GLfloat *params);
void  glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
void  glCopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
void  glMultiTexCoord2fv(GLenum target, const GLfloat *v);
void  glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);
void  glNormalP3ui(GLenum type, GLuint coords);
void  glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
void  glDrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
void  glColorPointer(GLint size, GLenum type, GLsizei stride, const void *pointer);
GLuint  glGetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);
void  glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat *value);
void  glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);
void  glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
void  glGetBufferPointerv(GLenum target, GLenum pname, void **params);
void  glTexCoord2bOES(GLbyte s, GLbyte t);
void  glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
void  glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);
void  glWindowPos3dv(const GLdouble *v);
void  glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
void  glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *param);
void  glBindBufferARB(GLenum target, GLuint buffer);
void  glNormal3bv(const GLbyte *v);
void  glGetMaterialiv(GLenum face, GLenum pname, GLint *params);
void  glUniform1fv(GLint location, GLsizei count, const GLfloat *value);
void  glBeginOcclusionQueryNV(GLuint id);
void  glGenFencesAPPLE(GLsizei n, GLuint *fences);
void  glScissorIndexedv(GLuint index, const GLint *v);
void  glDisableVariantClientStateEXT(GLuint id);
void  glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
void  glNormalPointervINTEL(GLenum type, const void **pointer);
void  glNormal3s(GLshort nx, GLshort ny, GLshort nz);
void  glGetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint *values);
void  glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint *params);
void  glNormal3i(GLint nx, GLint ny, GLint nz);
void  glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint *params);
void  glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz);
void  glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void *pointer, GLenum preserve);
void  glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz);
GLint  glGetUniformBufferSizeEXT(GLuint program, GLint location);
void  glMultiTexCoord4dv(GLenum target, const GLdouble *v);
void  glProgramUniform3i64ARB(GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);
void  glBindProgramPipelineEXT(GLuint pipeline);
void  glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
void  glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
void  glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount);
void  glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);
void  glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message);
void  glMultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
void  glVertexAttrib2s(GLuint index, GLshort x, GLshort y);
void  glTexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLuint  glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName);
void  glFrontFace(GLenum mode);
void  glEvalCoord1xOES(GLfixed u);
void  glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLboolean  glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
void  glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params);
'''
